<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@ijin]]></title>
  <link href="http://ijin.github.io/atom.xml" rel="self"/>
  <link href="http://ijin.github.io/"/>
  <updated>2018-02-22T19:39:16+09:00</updated>
  <id>http://ijin.github.io/</id>
  <author>
    <name><![CDATA[Michael H. Oshita]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AWS re:Invent 2017に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2017/12/31/aws-re-invent-2017/"/>
    <updated>2017-12-31T23:50:00+09:00</updated>
    <id>http://ijin.github.io/blog/2017/12/31/aws-re-invent-2017</id>
    <content type="html"><![CDATA[<p>AWS re:Inventに5回目の参加記録。</p>

<p>例によって、帰国直後の体験談の発表</p>

<script async="true" class="speakerdeck-embed" data-id="68dc84cbb44d44cebc608c31aca10b9a" src="http://ijin.github.io//speakerdeck.com/assets/embed.js"> </script>


<p><img src="https://lh3.googleusercontent.com/V14NgOarSqa6dSAj2hvppJuVQsFGm7EU07dWXCY2vUox09ysgJ9vdM8_Y4y6uNWH0iioyoKKrGocPT27QIRpTNtg5kVT5AZezM4aLh5s_Ob-LwmdToh9Rh6Q9CWN1ts6VfAOo3bUIA=w473-h630-no"></p>

<h2>Game Day</h2>

<p>まず、何よりもGame Day！もはやこれに出れれば8割型満足。。内容としてはいろんなサービスを使うようになってて結構凝ってた。</p>

<p><img src="https://lh3.googleusercontent.com/ZntKtGaloc3dWKmu1roAm3J0lyqArnkc7RmMxUIv4reySM1puFffYU9Tc_HO54S9NTdfoOvfMwfPpTjJyMybH_K6sj4OEfPDfKJPhGWHQ9CcrxtHlBKjKazuYdBbpYqdenkX4Aqxjw=w1050-h787-no"></p>

<p>去年の運営チームとは別になったらしいので中身も毛色が少し違ってた。</p>

<p><img src="https://lh3.googleusercontent.com/HRURknhesNClVInP9hIU1XLDcyVMHxlvCr47TPMXMVPYcqgUIyDO0UyzE2WZ73sZa7UBmh3ULw_saq2rPnEhA_j_CYeQcALEzs4joBjlRO8gsCvA_ATcXRV8v8B0ZnSSChL9N5iuFA=w591-h787-no"></p>

<h2>Keynote by Andy Jassy</h2>

<p>今年は部屋でゆったりと。</p>

<p><img src="https://lh3.googleusercontent.com/qjbdhgOgzzvykTsUJtz_ZbCWF4hBj3mfEEw9R6BwQKg_sPf6FyO8F2b2xHZLk2JZFdLyV8SU7IWg1WYK0fqEzjNF5kIe8ry9JVvZlZwROZLpGjSnNeXzdDrhQTq-h5kknwLTnvZwhQ=w1122-h842-no"></p>

<p>怒涛のリリースラッシュ！</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">The list of current AWS services barely fits on this huge stage slide <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a> <a href="https://t.co/RxZHpCKbtl">pic.twitter.com/RxZHpCKbtl</a></p>&mdash; Marius Ducea (@mariusducea) <a href="https://twitter.com/mariusducea/status/935904367990861825?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="et" dir="ltr">EKS (ECS for Kubernetes)きた。 <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935909063363194880?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AWS Fargate、2年前に欲しかったやつだ。 <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935909778009702401?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="es" dir="ltr">Aurora Multi-Master! <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935912830284439552?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Aurora Serverless&#8230;そのネーミングはちょっと。。 <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935913661276626949?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">DynamoDB Global Tables&#8230; Spannerっぽいやつか。 <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935914517694857217?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">DynamoDB backup &amp; restore! もうDatapipelineで疲弊しなくて良いのか。 <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935914943995510784?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Amazon Neptune. Graph databaseか。 <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935915727248277504?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">S3 Select&#8230;Athenaとどう違うんだ。 <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935921615967207424?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Glacier Select&#8230;w <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935921912240209922?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Amazon Sagemaker! <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935924977290723328?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AWS DeepLens. Greengrass入りだ。<a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935927159998226433?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Rekognition VideoにKinesis Video Streams。すごいな。 <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935931635928674304?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Amazon Transcribe。便利そう <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935932086455746562?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Amazon Translate!  <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935932557853573121?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Amazon Comprehend! <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935933124621381632?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS IoT 1clickにIoT Device Management <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935939366404333568?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS IoT Device Defender <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935939678561173504?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS IoT Analytics <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935940580152033280?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="es" dir="ltr">Amazon FreeRTOS <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/935941862111690752?ref_src=twsrc%5Etfw">November 29, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h2>DeepLens Workshop</h2>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">わーい。DeepLens Workshopに入れた！マシンはUbuntu <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a> <a href="https://t.co/kIVSqnQxL8">pic.twitter.com/kIVSqnQxL8</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936069758834716673?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">SqueezeNetというCNNモデルをSagemakerでJupiter notebook上でトレーニングしてDeepLensにデプロイ、推測はlambdaに任せるように設定するとさっきもらった🌭 の判定がリアルタイムで出来た！<a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936091987194679296?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ゲット！ <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a> <a href="https://t.co/YqnKo9qkE9">pic.twitter.com/YqnKo9qkE9</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936112237835567105?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h2>Keynote by Werner Vogels</h2>

<p>前日に引き続き、リリースラッシュを構えていたのにちょっとだけ発表してWernerの熱い想いを語る独壇場だった。。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">And <a href="https://twitter.com/Werner?ref_src=twsrc%5Etfw">@Werner</a> is on the stage <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a> <a href="https://t.co/UtpuhDgPtM">pic.twitter.com/UtpuhDgPtM</a></p>&mdash; Marius Ducea (@mariusducea) <a href="https://twitter.com/mariusducea/status/936271664844644353?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Alexa for Business。ユーザやスキル等のマネージメントをしてくれる <a href="https://twitter.com/hashtag/reinvent?src=hash&amp;ref_src=twsrc%5Etfw">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936279030734626816?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AWS Cloud9！まんまだw <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936285778052759552?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Vim modeもあるぜ！ってのが太字だw（emacsは普通文字） <a href="https://t.co/2MwmHFrrHp">https://t.co/2MwmHFrrHp</a> <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936286654955896832?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Cloud9使うのにEC2なんて起動したくないよ。。 <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936290503854735360?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Lambda features: API GW VPC integration, Concurrency control, 3GB memory, .NET Core 2.0, Go <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936301561583583232?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS Serverless Application Repository、ほう。 <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936301841972731904?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">冒頭で言った通り、今日のKeynoteは発表ほとんどないな。昨日の怒涛のリリースラッシュみたいなのを待ち構えていたけど。 <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936305707007098880?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h2>Hackathon - ALL-in JAM</h2>

<p>いろんな要素やサービスが詰まったハッカソン。初めて触るサービスもあって楽しかった。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">UIがかっこいい <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a> <a href="https://t.co/j62Px7WfAN">pic.twitter.com/j62Px7WfAN</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936324291594928128?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">始まった。BGMはMatrixのClubbed to Death <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a> <a href="https://t.co/Ha86JAO0k8">pic.twitter.com/Ha86JAO0k8</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936329057439858688?ref_src=twsrc%5Etfw">November 30, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h2>会場</h2>

<p>VenitienからAriaまでの道のり。。長い。</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/Kd2HMe02DYg "></iframe></div>


<h2>re:Play</h2>

<p>メインDJはDJ Snake。プレイ自体は30分ぐらいは楽しめたかな。。好み違った。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="und" dir="ltr"><a href="https://twitter.com/hashtag/rePlay?src=hash&amp;ref_src=twsrc%5Etfw">#rePlay</a> <a href="https://twitter.com/hashtag/reInvent?src=hash&amp;ref_src=twsrc%5Etfw">#reInvent</a> <a href="https://t.co/ece6W02ba0">pic.twitter.com/ece6W02ba0</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/936480800165343232?ref_src=twsrc%5Etfw">December 1, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h2>まとめ</h2>

<ul>
<li>Fargateもっと早く欲しかった</li>
<li>DeepLensもらえた。何作ろう</li>
<li>今年もlambdaにrubyが来なかった</li>
<li>Cloud9でEC2自前で立てるのはコレジャナイ感</li>
<li>会場広すぎでしょ</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">JAWS-UG 横浜 re:Invent recap めっちゃ楽しかったーみなさんお疲れ様でしたー<br>最後  <a href="https://twitter.com/ijin?ref_src=twsrc%5Etfw">@ijin</a> さんが言ってた「情報にキャッチアップするなら doc 読めばいい。現地行って workshopとか参加しようぜ」ですね。</p>&mdash; Toshihiko Nozaki (@bukaz54) <a href="https://twitter.com/bukaz54/status/937659284384395266?ref_src=twsrc%5Etfw">December 4, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ServerlessConf Austin 2017に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2017/04/30/serverlessconf-austin-2017/"/>
    <updated>2017-04-30T17:40:00+09:00</updated>
    <id>http://ijin.github.io/blog/2017/04/30/serverlessconf-austin-2017</id>
    <content type="html"><![CDATA[<p><a href="https://austin.serverlessconf.io/">ServerlessConf Austin 2017</a>に参加したので、端的なメモ。</p>

<p>Day 1の終わりに着いて、ほぼDay 2のみ</p>

<p><img src="https://lh3.googleusercontent.com/PU0qf-q97mQXg0frh0vEyY_yzmiTrUUIISKS3Lr4hrqMvimTogqZEge-lg3N76kvUqS-4XnlW23ATuuguLNqGkDcODQOn393OKl2XZtpDsnXjxUSKfeDn1r12OI15QFiec36CPO8ag=w1122-h842-no"></p>

<h3>Self Replicating Serverless Function -  Michael Adda</h3>

<p><a href="https://en.wikipedia.org/wiki/Quine_(computing">Quine</a>おじさんによるウロボロス的lambda実装のお話。思考実験としては面白かった。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">quineおじさん  <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/FOisTd9AUD">pic.twitter.com/FOisTd9AUD</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/857961545015242752?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ウロボロス！  <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/hSmps3fWKj">pic.twitter.com/hSmps3fWKj</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/857962397281144832?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h3>Harmonizing Serverless &amp; Traditional Applications - Ryan Brown</h3>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="fr" dir="ltr">Queueueueueuing! <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/mL67Gt9UU9">pic.twitter.com/mL67Gt9UU9</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/857965198698835968?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h3>Serverless Security: What’s Left To Protect? - Guy Podjarny</h3>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">元Akami CTOによるサーバーレスセキュリティのセッション <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/nGYiTuYys8">pic.twitter.com/nGYiTuYys8</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858005309104693248?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">今はSnykというセキュリティ・監視サービスをやってる。後で見てみよう。 <a href="https://t.co/u91czC6gPE">https://t.co/u91czC6gPE</a> <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858005655960961026?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h3>Single Page Apps &amp; Serverless without Compromise (or as little as possible) - Jared Short</h3>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">GOAD - LamdaとGoによる分散負荷テストツール。便利そう。 <a href="https://t.co/bUDyL0OHYz">https://t.co/bUDyL0OHYz</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858029124899794944?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">GraphQLかー。 <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/Ti2EgaXZVt">pic.twitter.com/Ti2EgaXZVt</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858032484273074176?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">おお、GraphQLとLambdaのプラットフォーム <a href="https://t.co/Cn0FK5MV0c">https://t.co/Cn0FK5MV0c</a> <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858033058661924865?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Server Smoothie! <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/qg84hSy2qQ">pic.twitter.com/qg84hSy2qQ</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858080490104004608?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h3>Serverless Workflows in AWS: A Journey from SWF to Step Functions - Forrest Brazeal</h3>

<p>最後にRAP!!!新しいwww</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">この人、セッションの最後でサーバーレスのラップを約束したぞ。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash&amp;ref_src=twsrc%5Etfw">#serverlessconf</a> <a href="https://t.co/ajDs6VR2Ne">pic.twitter.com/ajDs6VR2Ne</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858043060508401664?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Serverless Rap!? <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/iRRVS48KNa">pic.twitter.com/iRRVS48KNa</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858051472830889986?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h3>Keynote by Tim Wagner</h3>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">今回のTimはどんな風にサーバを破壊するんだろう。ステージ横の布が気になる。 <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/mxzwQfrfWL">pic.twitter.com/mxzwQfrfWL</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858069201797468161?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ドラクエだ！ <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/iiRJnhiiGO">pic.twitter.com/iiRJnhiiGO</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858073465315831808?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">PyWren - lambda map/reduce framework. 25TFLOPS! <a href="https://t.co/kEhLd2scbF">https://t.co/kEhLd2scbF</a> <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/dWeQS0tkIC">pic.twitter.com/dWeQS0tkIC</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858075062045487104?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">お！ <a href="https://twitter.com/hashtag/ServerlessConf?src=hash&amp;ref_src=twsrc%5Etfw">#ServerlessConf</a> <a href="https://t.co/61PH6xI1mS">pic.twitter.com/61PH6xI1mS</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/858079838577598464?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>


<h2>おまけ</h2>

<ul>
<li>オースティンめっちゃ暑かった（日陰に入ると涼しい）</li>
<li>シュラスコ美味かった！</li>
<li>Uberが締め出されたのでローカルアプリが必要</li>
<li>下記コメントが印象的だった</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Uber/Lyftが出て行って沢山のクローンサービスが立ち上がったけど、その中の一つのRide Austinでドライバーと雑談。「NPOだから、俺たちの手取りが大幅に増えて大変助かってる。前はガス代ぐらいにしかならなくて、生きていくのがやっとだった。出て行ってくれて良かったよ」</p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/857749605039063040?ref_src=twsrc%5Etfw">April 28, 2017</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruboty-github_pr_releaseを作った]]></title>
    <link href="http://ijin.github.io/blog/2017/03/27/ruboty-github-pr-release/"/>
    <updated>2017-03-27T03:23:00+09:00</updated>
    <id>http://ijin.github.io/blog/2017/03/27/ruboty-github-pr-release</id>
    <content type="html"><![CDATA[<p>よくプロジェクトで<strong>staging</strong>や<strong>production</strong>ブランチにリリース用のpull requestを送ってmergeする事でCircleCIが走って自動デプロイするような仕組みを入れているんだけど、いちいちGitHub上でポチポチ画面を押すのが面倒くさいのと、久しぶりにやると<code>base</code>や<code>compare</code>とで混乱しそうになるので、ChatOpsを導入して効率化してみました。</p>

<p>Slackと連携できるボットには<a href="https://github.com/r7kamura/ruboty">ruboty</a>を選択。</p>

<p>プラグイン周りでは<a href="https://github.com/r7kamura/ruboty-github">ruboty-github</a>があるけど、微妙に要求に応えれなかったので少し拡張した<a href="https://github.com/ijin/ruboty-github_pr_release">ruboty-github_pr_release</a>を作りました。久々のgem公開。</p>

<h2>Install</h2>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;ruboty-github_pr_release&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Release pull request</h2>

<h3>create</h3>

<p>pull requestを作成。それまでmergeしたfeature branch等のタイトルが集約される</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruboty release from &lt;org/repo:from_branch&gt; to &lt;org/repo:to_branch&gt;
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://lh3.googleusercontent.com/Maeofoz1VcZ_l4dHbiFC9UESHCYg_oJ7NQYgyzsSkDMTTgjm3wFXOpxYMbJCfJ5smE4xOZ1ibTBLIlftaehZP9vAAxiCONthjxq_-g83bVSWpi7-GygWY0V-5_n4F59w5BQYTETWPdR3uOg02uHf-YC4ZywaVoslTtA_TjpmzbOgD83uyWbEp50fv5K4opeMZ5Izxxlln_00PE3SLTw9S_mv47oOrTYejPr1pBBS-AT4j7uTFe-8ttvm4OxLq2r6D7G6XFPQYkeJPv5GmHEUIYzNJRITussv5v9Mrg21cDHojiasmZIZ-dW_Zp84kegBza8_BmqicXIPdiofe8T7BD6bqalWYhL2nZikQR1mCRqCSCFFLAFsBFgCMTNrwQuiGCjMF7jbu9knab3SY0pTDU-_daW90yh-1fH6C61IbaMlrcL1Zz3QH-63s61Psdi50ULKieXgS0H9L0dv_hf6VjdnNO3EqxHsxRLmDkvH6w93IXaa925pFSF8pKQbFwPxmo5xilZT2QA48JDMiBPjOhes1ECAn7gsqdbAVE4Qjbjwjo2DMdrpAwcBUTk_XHtI5tKmXtsOH9Ux-9PeCqyKhYV8ovcZpVUIE0p4GUhSe12Ubz7vvpyJdtk3cAhduKLWAlbTkQvCsiyng7iTDVVoGEgP0Lf0PCSHBUgV=w690-h341-no"></p>

<p><img src="https://lh3.googleusercontent.com/k9nSfgSE2UGJdSmbYFwFiA3c2_hfdFQeVH2ODGuGz_a8n55jn7KQF6PHAAbYVIA9UO9CJz4PCBJMcP5nqC7TIsAW7TpUgy95DfrdlCsGgpT0bmH8WVKN-wBQgkQbV4g5GyJSCnUYQtXMZ68KQ2-742cHZjD71ZvzSWmCQVIcpDetVcYVvAMvvZmAq6bYAHL2mrsdLaPhA8ghLe-yQBa5mzU93Z-9F4JlsIZJnDDVKweOdnbVb0Hvz2_LKmtFIAZVuitG-FIYpHlipFspT9A7cxgmoUsun_bk1sjz6G62ME47yJ8TreJXgy541VubqorxNpw_oxh7fmY4yfHV-NPee6ir_Gh8XiBUUfwnwmJlcH9XakKYJIiSG2N4rNO4IQEruJGbGF3xtZBbLr6B-FS1i6Hbyu3b00Oll9gOpMe4-3lVjhdLj_mvSXnsqEfFAZiFxxsCZMzRVf1EaaZz4pnJESH8I-jsDhvPbZjG17URM462tDrKhPPMqxLlIIrvToOfOm6WE6VgmaRamU9qNvkNkdbT7D40QMZtNv6oQPefCCi3sGvVupA9rRYMgSjkxIsjB54143O4neWF0i8m-3b_DDUhSSENbcY65JsfpjeN69QoQc1m_6xYMwyUZrLSlgjKUU9WGbEF_JuKf4vlJjyl5iEw7S-eSqPFXyVE=w788-h323-no"></p>

<h3>update</h3>

<p>pull request作成後に新たなコミットを取り込む時やタイトルを変更したい時</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruboty update release from &lt;org/repo:from_branch&gt; to &lt;org/repo:to_branch&gt; as <span class="s2">&quot;new title&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://lh3.googleusercontent.com/lBtqLfDzm-i0Fx2gmgFLf5kqCLggaHcoWYIHz3Gc8V-gkEAVAHnYUqUHPyD3qIrZDPf0aqK_iMooTu1lqqNodLO48Kz-4TINxSjJ55odD2D2efC5Q7FKp7F1hf9ZsUqg3lwjRe0SXZjqpn_tdGU6Aj8sT6dFHneCwGLdvpIk4CeeMvqpMCK1jcVMIg2bIexqzL2WXB8UqCnUN7X5guuYXOiwujAqpMHcR7ksTAkCJQ-jqlgN2J__HsA_nAZRmkraosxx6wedZW6__xfoFE0pKeqYMAKxLFKyZf-KNHqeu6929EiBNlMYjJbvzQcSP8LFS274EhbvJj9kEgVZ_b9q0n9wRatYS9l4riIwXJUpJu4LqAadR9RPg57t_o1Gk6bCOP0--QHcAwii7VahP8pJGfqE-AWU3BKvCi9CWHhtbFjfXIMgNJVVjuH7NiskyO2Gv-Q5Nw2XsJOOwNZpcFGBgBIgmimOvbgP65AMCNRTwCuM4cHWBksEdxHDYtIKKyZgHxbNfpZ96bbWimVatU03b3rp9-v7NNnfGpo3dYFfLmkzyoxht80N6PrY-z9eWIXAluqNPHL0Hoo6GpyZ_DPJQDGV3fgLpFa5qq6G-bAU6CoOy-PTMdwLfk1mT-X2Qb4cFkTkP5_fam-K-a7648ieTLesk6u-tO3shqSO=w716-h173-no"></p>

<h3>deploy</h3>

<p>pull requestをmergeしてデプロイ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruboty deploy release from &lt;org/repo:from_branch&gt; to &lt;org/repo:to_branch&gt;
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://lh3.googleusercontent.com/3FgcgasCewgjRRRVwbFyxqTAaLyjmVR0R0pJEg7j6YmG00AIuvfvWLb86XptuQrPf2WvKcgmWZASqNJXhRvyW2Pwe60MSDlIFX-RLVKfw5VsTOJdvZ1skig0n5xLlr5RvkLjxCNRvaa9EHQwp78olWdlL4UIL5z1YJswu4UVFQrG1AAaP_neCEwckXzEV68kU4p0J-OSYiH2w-69_x2-46Rpdo-mgwaHsq8gMYU7E6N2pv5lIGnFjQVWXBMh6Ct4zq5XsDQ_Y59pf29TXujZwrRm960DcbYWG2_eEW4A73jLhLfZOBJja-wBnzdi-lHtj_cbGKyfZ2uyKZMuZ1hZOgtXV9WraCYZltMBR1Rx_aU9Aeod-FFh_z223N4Yv77G76rylZBb-KPJ9yoXDPMq4bvpYp64ovcsaeP1BzACOHwNtExXxmj33KDW5U_OhBTTAVSnmiv9jHPwyJvjbtaPHHWZCBACOmgY9U4kSWHyMvzlEmDucq84CVEZiAAbUt_Q8BCluz22qOvuJ0b7LYQj3vMnoYFXg43Qlzgegmc1LNtaApAqIXEao4H8u7KM-iAUhL65DfrMGwhM4uqIKJ-IFOZ-6Yq5R5JX2khonzSbb82gbjLRyOwaCVipOZAYgBoJRphEBV1n3duHWZR0DLU3rlro2BdSAqLUJp7h=w661-h329-no"></p>

<h3>alias</h3>

<p><a href="https://github.com/r7kamura/ruboty-alias">ruboty-alias</a>や<a href="https://github.com/zeny-io/ruboty-scoped_alias">ruboty-scoped_alias</a>を使うとさらにコマンドを短縮して便利です。scopedにすると部屋毎にプロジェクトを割り当てたりも可能。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruboty scoped <span class="nb">alias </span>release production -&gt; release from ijin/test:staging to ijin/test:production
</span><span class='line'>ruboty scoped <span class="nb">alias </span>deploy production -&gt; deploy release from ijin/test:staging to ijin/test:production
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://lh3.googleusercontent.com/o-8Ft9YoejCyQC6xtFH1B49rE9Ch9c0eDnV0Ax8YbbG3yn7GQ-vsXu_9spPY8r_kWK3edUSqmFWcmOuMopiAy4WX20Hx50_phtBNUC0CR3ojEF2Vl1ylagOUp0rPb10N0JLIH3Bg3a5A2aXliL_SOcVoHBvjK7tgwJFMrBtOomzmDrA9mvlwLplNgoQq_00siqasIVU4uyHexrHCLx5iB1bHsIMJQS1f_gkFYyWHjho8lBGKH8xBoayrkRv2APmTXfwYkPGFnSAwnc9XnNI_ABx64rQzHgIWTYMPt_1Bn-VDNlVtlo0Zg0ew7ZWS1zn1wHHNfb6oNxStMAI9dfPeQLZTkBxOPxkwWIvByYUEq_C6J63VZwYkG511DSMYPxfgC7AKDTU3CPKadcER5lkK7V5hmIRe1ZivzZsTXi3leJyAslQMYem1GPBGD8DbEddrldt6S8uLq2L8cDiDMGh7j9_y-Ctb3TwruuN5512TEmCyToLUsDOszrj9ByjSQ0jup2e8_QMIkb9OWFzozyUX-lAesx57ZXf42JiD2HGELkJ5ko-iQWNLjoUIbRnJJZ--laTB55dTdGYHIAmE6rJhq1T8AtTqNKLdrL8GLN5I9Wu4bs_Jzc4HZj2cTx5Onw3_8MCM8UXO9M_Sxsq75KsoEUNNvAq-IIF5afkm=w681-h343-no"></p>

<p><img src="https://lh3.googleusercontent.com/AkKCJiYbkN2l0vDZ_YxZzisxTbq3z-hXWpZ1OOdR7g6WVQKs9X9CYAZv3yoYBACPcWPpumaIkE_q9enlrag9HoPk9tiR1XjsxTLRZarcldX9QXdgSYwXUdvugVn1oVphGvYxiw63HnsvjUiQM76Sywq8DGMCTEVb4U0GvW99vQ-D9M18jNmf-wbUeZifM_UpFRIDADuWpxzEr_rcBfv5DkElBfQagz9iYO1Aw5KttM4P6PHA0qowrWnkjBTku47rkgitxgRLHGpb4CFJAfSu2IT1ICxOLEfEB-coo97U6aAWInSHIut3RWCVB0B8lzYq466l9XlqY3dcNEOHfQVTUZvuRsPBwBFVdELGvcKjeVsQl1Fxw_p0bpWrti2W3xmaKSWylcFGPc6f6ag2T6Vn8bc26TA7OWO7lGRZTMsCeJJ1q3nKcaUNzP1SvCVn2Y_9oW_mZc7wtRnalnxt-eYnzv6jDt1c2ryzhWTNLXFEVlRfuaPd7SNx0eYZdHBs0dK9dTjeu5UUDDkSJbxx2SHcv7ok5LsheYuO481Hk4q_61RYjCfKWlC2qtSYOTnHkYZ88doCipbkAsshRWmBzu_RTXHv5WibEP36WZ1NucCNiemtin1Ze7qRYuRX9mzPxIs5Pz2uP9Omg-xUqfpZALxaZqwiVVX7bhZmckFP=w658-h334-no"></p>

<p>簡単！</p>

<h2>注意</h2>

<ul>
<li>開発branchにmergeされたサマリーを作成するのでGit/GitHub flow等が前提（直接branchにコミットしない）</li>
<li>mergeをrevertしてしまうと、branch間の差分が取れなくなるので開発branch（develop等）から修正fixを新たにpull requestとして送る必要がある</li>
<li>ruboty-githubは個々人で認証をしているので、チャネルではなく、rubotyに対してDMで認証するべき（remember my github token xxx）</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="https://github.com/motemen/git-pr-release">git-pr-release</a></li>
<li><a href="https://github.com/rockuapps/hubot-deploy-builder">hubot-deploy-builder</a></li>
</ul>


<h2>おまけ</h2>

<p>ほとんど作り終えたところでほぼ同じ機能を持った<a href="https://github.com/increments/ruboty-qiita-github">increments/ruboty-qiita-github</a>に気づいたけど、気にせずリリースしちゃった。一応merge周りはこっちの方が若干楽なので。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS re:Invent 2016に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2016/12/31/aws-re-invent-2016/"/>
    <updated>2016-12-31T23:20:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/12/31/aws-re-invent-2016</id>
    <content type="html"><![CDATA[<p>4度目となるAWS re:Inventに参加したので、記録を。</p>

<p>帰国直後にJAWS-UG横浜支部で体験談を発表したのですっかり忘れてた。。</p>

<script async="true" class="speakerdeck-embed" data-id="1c7e6641288445e9970318d92a4c78af" src="http://ijin.github.io//speakerdeck.com/assets/embed.js"> </script>


<p>　</p>

<p>今年は例年より開催が1ヶ月遅く、且つ期間が長め（11/28〜12/2）でした。
参加人数は過去最大規模で32,000人。PalazzoとVenetianのホテルに収まらなくて、新たにちょっと離れたMirageも借りることに。また、今年から登録制の運用が厳格になったので、飛び込みは行列に並ぶ必要がありました。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Mirage遠っ。 <a href="https://t.co/z7J0ngJtUM">pic.twitter.com/z7J0ngJtUM</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804122742312169472">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h2>Day 0</h2>

<h3>Game Day</h3>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">おや。 <a href="https://twitter.com/hashtag/awsgameday?src=hash">#awsgameday</a> <a href="https://t.co/autaazWZix">pic.twitter.com/autaazWZix</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803353436850778112">November 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>お題は去年のUnicorn企業のシナリオを拡張したけど、テーマは今年の流行りを反映した内容。
運用コストやパフォーマンスが加味され、チーム感でスコアを競うんだけど今年は新たにボーナスステージが用意されたりして全体的にいろいろ最適化されてた。</p>

<p>80チーム以上で過去最大規模。また、奇しくもGame Day初回参加時に同じチームメンバーで友人となった人とチームに！</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr"><a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> で一番楽しい時間がもう過ぎ去ってしまった。なんてこった。 <a href="https://twitter.com/hashtag/AWSGameDay?src=hash">#AWSGameDay</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803468342409342976">November 29, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>8時間の長丁場だったけど、もうこれだけで大変満足して後はもういいやって気分に。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">GameDay 2016、waitlistギリギリで入れたー！ <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803350706807676928">November 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>ちなみにオンライン登録が間に合わなくて、当日飛び込み参加だけどなんとかギリギリ最後の一人では入れた。</p>

<h2>Day 1</h2>

<h3>Tuesday Night Live with James Hamilton</h3>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Tue Night Live w/ James Hamilton <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/QgXY3tLbGG">pic.twitter.com/QgXY3tLbGG</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803813887476781056">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>AWS Vice PresidentのJames Hamilton氏によるデータセンターの詳細が話された。初公開情報が多く、パッションが強くて聞いてて飽きなかった。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Amazonのグローバルネットワーク図。初出し。 <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/2MmkOe6kPs">pic.twitter.com/2MmkOe6kPs</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803815598106898432">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">リージョンのネットワーク図 <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/kFEFYjgcmg">pic.twitter.com/kFEFYjgcmg</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803817093065895937">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AZ一個でサーバ30万台以上するとこも。 <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/jAe8xaCQbN">pic.twitter.com/jAe8xaCQbN</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803818226270355456">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AWS Custom Routers プロトコルレベルまで自社開発してコストは安くなったけど、それ以上に信頼性が格段に向上した。 <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/BfwBO2LHwd">pic.twitter.com/BfwBO2LHwd</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803819449547534336">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ASICもカスタム仕様 <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/edREByIfq0">pic.twitter.com/edREByIfq0</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803819958106996736">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="und" dir="ltr">SDN! <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/EFPv1xmcIX">pic.twitter.com/EFPv1xmcIX</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803820572853628928">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="pt" dir="ltr">Custom Silicon! <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/G5jBKL2WaG">pic.twitter.com/G5jBKL2WaG</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803821331829653504">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">バックアップ電源に切り替えるswitchgearまで自作してるのか！ <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/3ujpEpd43e">pic.twitter.com/3ujpEpd43e</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803822550786699264">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ストーレジラックまで。42u rackで8.8PB <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/Z5e5cEKviE">pic.twitter.com/Z5e5cEKviE</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803823207727955975">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">サーバももちろん自前 <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/6BGijdu3Js">pic.twitter.com/6BGijdu3Js</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803823906809376768">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>新サービスもちょこっと。</p>

<ul>
<li>NASA MARS for Alexa</li>
<li><a href="https://github.com/awslabs/deeplearning-benchmark">Deep Learning Benchmark</a></li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">明日からAlexaが火星対応！ <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/pDiKH6I7ar">pic.twitter.com/pDiKH6I7ar</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803830533037969408">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Available Today! <a href="https://twitter.com/hashtag/awsreinvent?src=hash">#awsreinvent</a> <a href="https://t.co/iz4uyBP0Vg">pic.twitter.com/iz4uyBP0Vg</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/803834613172998145">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h2>Day 2</h2>

<h3>Keynote</h3>

<p>Andy Jessy (AWS CEO)により発表。テーマは「<strong>Superpower</strong>」</p>

<ul>
<li>new EC2 instances (t2.xlarge, t2.2xlarge, r4, i3, c5, f1 (FPGA))</li>
<li>Elastic GPU&#8217;s for EC2</li>
<li>Amazon Lightsail</li>
<li>Amazon Athena</li>
<li>Amazon AI (Rekognition, Polly, Lex)</li>
<li>PostgreSQL for Amazon Aurora</li>
<li>AWS Greengrass</li>
<li>AWS Snowball Edge</li>
<li>AWS Snowmobile</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">新インスタンスタイプ！t2.xlarge, t2.2xlarge, r4, i3,c5 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/Lv7koe677P">pic.twitter.com/Lv7koe677P</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804000002599165952">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">新ラインアップ概要 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/1ezXOmeYd8">pic.twitter.com/1ezXOmeYd8</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804002050363297792">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">s3に直接SQLが投げれるAmazon Athena <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/4QnwH0VlbA">pic.twitter.com/4QnwH0VlbA</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804003470680489985">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Rekognition（画像認識）、Polly（text to speech）、Lex（自然言語認識）の3セットでAmazon AI <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/YFJUzaIso1">pic.twitter.com/YFJUzaIso1</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804006625187074048">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ふむ。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/6nARglZWWI">pic.twitter.com/6nARglZWWI</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804019128356970496">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS Greengrass? <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/ACQv6Xijup">pic.twitter.com/ACQv6Xijup</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804024035726106624">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Snowball Edge <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/rfuty5ekRM">pic.twitter.com/rfuty5ekRM</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804025734788321280">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">なんかトラックが入場したと思ったらAWS Snowmobileだと！  <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/x6YWOiyUga">pic.twitter.com/x6YWOiyUga</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804027411847204864">November 30, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h2>Day 3</h2>

<h3>Werner Vogels</h3>

<p>Werner Vogels (AWS CTO)による発表。テーマは「<strong>Transformation</strong>」</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Werner今日はトランスフォーマーだ。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/Nct5CTBsd3">pic.twitter.com/Nct5CTBsd3</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804362950790160384">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<ul>
<li>AWS OpsWorks for Chef Automate</li>
<li>Amazon EC2 Systems Manager</li>
<li>AWS CodeBuild</li>
<li>AWS X-ray</li>
<li>AWS Personal Health Dashboard</li>
<li>AWS Sheild</li>
<li>Amazon Pinpoint</li>
<li>AWS Glue</li>
<li>AWS Batch</li>
<li>Blox</li>
<li>AWS Lambda for C#</li>
<li>AWS Lambda@Edge</li>
<li>AWS Step Functions</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Fully managed Chef serverかー。最近Chef使ってないけど。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/jaQ8DgBfpa">pic.twitter.com/jaQ8DgBfpa</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804370640245399552">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">便利ツール一式？ <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/CyS8VeW9Lu">pic.twitter.com/CyS8VeW9Lu</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804370991186968576">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">CIのビルドサービス！ <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/i1zDjqmiL5">pic.twitter.com/i1zDjqmiL5</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804371665027092483">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS X-Ray <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/ILtXKQucrf">pic.twitter.com/ILtXKQucrf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804372921703481344">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS Personal Health Dashboardかー。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/7oPtjHaa2O">pic.twitter.com/7oPtjHaa2O</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804374390435520512">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">DDoS対策用のAWS Shield StandardとAdvanced <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/8WS1H47zDY">pic.twitter.com/8WS1H47zDY</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804375684005044224">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ほぉ〜 <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a> <a href="https://t.co/Cs9fkdvrG7">pic.twitter.com/Cs9fkdvrG7</a></p>&mdash; もっぱら (@toricls) <a href="https://twitter.com/toricls/status/804380305754726400">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS Glue <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/Ij5vAHpajN">pic.twitter.com/Ij5vAHpajN</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804385530460835840">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AWS Batch 良さげ。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/1wSf9PaotD">pic.twitter.com/1wSf9PaotD</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804388650519695360">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">コンテナ用OSS一式のBlox <a href="https://t.co/p39oY7yNAG">https://t.co/p39oY7yNAG</a> <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/K1qGPc3QIE">pic.twitter.com/K1qGPc3QIE</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804391256235208705">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">C#かよ。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/dzjl7DmEhe">pic.twitter.com/dzjl7DmEhe</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804393326493331456">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">RubyかGoを期待してた。。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804393582677278720">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">CloudfrontのEdgeでlambda実行出来るようになるのか。 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/D2VIeJIMPV">pic.twitter.com/D2VIeJIMPV</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804394818642153472">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>Lambdaのrubyかgo対応を期待してたのに、ちょっとがっかり。。</p>

<h3>SVR 309 Wild Rydes Takes Off - The Dawn of a New Unicorn</h3>

<p>サーバーレスをお題にしたワークショップ。コピペだけでちょっと面白みがなかった。。</p>

<p>詳しくは<a href="http://qiita.com/ijin/items/9d97115585c54befd3bd">こちら</a></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ServerlessのWorkshopだから貰えるクーポンはたったの$1 さすがfrugalなAmazonさん <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804434589628272640">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>AWS re:Play</h3>

<p>2016年EDMのベストDJに選ばれた若手のMartin Garrix。また金積んだな〜。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">re:PlayはMartin Gartix! <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/ekvTsUWTpC">pic.twitter.com/ekvTsUWTpC</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804396800400506880">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h2>Day 4</h2>

<p>のんびり</p>

<h2>Beta Certification Tests</h2>

<p>暇だったのでベータ試験を全部受けた。</p>

<ul>
<li>Advanced Networking</li>
<li>Security</li>
<li>Big Data</li>
</ul>


<p>途中、開始トラブルがあって、担当マネージャからテスト問題誕生秘話を聞いたり、クーポンもらったりした。</p>

<h2>最後に</h2>

<ul>
<li>今年も結局Sessionは参加せずにGame Dayやワークショップをやった。</li>
<li>Available Nowなサービスが多くて、最近のVaporware体質から脱却した模様。</li>
<li>ベータ試験受けたのは暇だったで何かチャレンジしたかったから！</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">総括 <a href="https://twitter.com/hashtag/reInvent?src=hash">#reInvent</a> <a href="https://t.co/VIoKT7zxkg">pic.twitter.com/VIoKT7zxkg</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/804395914483773440">December 1, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ServerlessConf London 2016に参加してきた。]]></title>
    <link href="http://ijin.github.io/blog/2016/11/09/serverlessconf-london-2016/"/>
    <updated>2016-11-09T01:36:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/11/09/serverlessconf-london-2016</id>
    <content type="html"><![CDATA[<p>先日、<a href="http://london.serverlessconf.io/">ServerlessConf London 2016</a>に参加したので、そのメモ（例によってtogetter風）。</p>

<p>少し前に話題の「サーバーレス」アーキテクチャに関するイベントである<a href="http://tokyo.serverlessconf.io/">ServerlessConf Tokyo 2016</a>をお手伝いしたことから、ロンドン版開催のお誘いが来たので行ってみました。</p>

<p><img src="https://lh3.googleusercontent.com/Uk-VZ2mRZ3DL0wef_4E83hYAFqaoyJmf6trHOZKlWqGur9uLBzCvlG3piGup5OlD2jNFehq3TsCg=w320-h425-no"></p>

<p>開催場所は<strong>etc.venues</strong>という施設。</p>

<p><img src="https://lh3.googleusercontent.com/QuQBUW9pBQxRt6_k0P4blgtq9dzm9sQhdumHPcJgGZWASNszAq4vAzeGNpD1IUB7_rW04y1-UMGE=w433-h319-no"></p>

<h2>Day 1</h2>

<h3>Keynote by Patrick Debois</h3>

<p>サーバーレスについてのカンファレンスなのに、キーノートでジャブ撃ちまくりが面白かった。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">DevOpsの名付け親のPatrick Deboisによるキーノート <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/9bStBPgR1s">pic.twitter.com/9bStBPgR1s</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791559728715268096">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">開発速度は上がるかもだけど、レイテンシーによる実行速度のトレードオフについて。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791561074734604289">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">サービスの信頼性について。lambdaはディスクやメモリが共有されてるので、よく考えて。スケールした場合のtcp connectionsに注意 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791562423224283136">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">セキュリティについて。フィルタリングやDOS対策等がなかったり。lambdaのlimitを 30,000まで上げた事がある。<a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791563104345731072">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">見積もりについて。既存のツールセットでは結構難しい。バーストの制限とかあると良い。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791563738566451200">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">コストについて。OSのパッチ等はいらなくなるけど、結局サービスの進化を追随しないといけないので、ラーニングコストは発生し続ける。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791564385244241920">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">新機能。統合テストの難しさ。開発速度は上がるけど、複雑さが増してテスト実行時間が延びたり。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791565224239169537">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">過去にも、未来は明るかったよw <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/LrbzhAe5vL">pic.twitter.com/LrbzhAe5vL</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791565471787003904">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">新しいテクノロジーだからってサーバーレスに盲目的に飛びつくんじゃなく、よく考えて使いましょうって事。まあ、そうだよね。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791566041629331456">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>Sessions</h3>

<p>iRobotや<a href="https://github.com/capitalone/cloud-custodian">Cloud Custodian</a>を公開したCapitalOneのセッションも面白かったけど、一番は元Parseのエンジニアである<strong>Charity Majors</strong>のセッション（<strong>Serverlessness, NoOps and the Tooth Fairy</strong>）。サーバーレスを採用しても結局サービスの責任は自分で負わないといけない啓蒙的な話を様々な例を交えつつ、パッションを持って話してくれた。</p>

<ul>
<li><strong>Serverless architecture at iRobot</strong> by Ben Kehoe</li>
<li><strong>Serverless for the Enterprise</strong> by Rafal Gancarz</li>
<li><strong>Real-time Data Processing Using AWS Lambda</strong> by Ken Payne</li>
<li><strong>Cloud Custodian, a serverless rules engine for the cloud</strong> by Kapil Thangavelu</li>
<li><strong>The Serverless Cloud Integration Pattern</strong> by Lars Trieloff</li>
<li><strong>Serverlessness, NoOps and the Tooth Fairy</strong> by Charity Majors</li>
<li><strong>Serverless Operations</strong> by Ben Bridts</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">iRobotがAPI gatewayを辞めた理由。end to endのレイテンシー。276ms vs 15ms <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/z2ViIf8YhX">pic.twitter.com/z2ViIf8YhX</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791571380621807620">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">API gwの切り替えはred black deploymentだけど、route53によるdns変更ではなく、エンドポイントを知らせるAPI gwを別途使ってた。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/rBLa2lrRox">pic.twitter.com/rBLa2lrRox</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791573027251257348">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">モノリシックなサーバーレス。。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/jqLifv0LVc">pic.twitter.com/jqLifv0LVc</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791588644486275072">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">この時間、聞きたいトラックがなかったので、とりあえずエンプラのセッション覗いてみたけどスライド内の文字の多い事よ。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791595279661359109">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Cloud Custodianの対応リソースが結構増えてる。 <a href="https://t.co/jF1aywI73B">https://t.co/jF1aywI73B</a> <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791624537326649344">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">What developers want. <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/Yf8JKja8uu">pic.twitter.com/Yf8JKja8uu</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791634525298253826">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AdobeはAWSと結婚して一生過ごすより、カジュアルにデートする程度のお付き合いに留めてる。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791637330742353920">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">おお、AlexaからAPI gw経由でOpenwiskを呼び出すデモだ。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791638343226392576">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>LT</h3>

<p>LTという割にはミニセッションな感じ。日本のLTみたいな笑い所はあまりなし。最後の火星探査機もどきのやつは少し興味深かったけど。</p>

<ul>
<li><strong>Migrating to Serverless: MindMup 2.0 case study</strong> by Gojko Adzic</li>
<li><strong>Serverless with Ansible</strong> by Ryan Brown</li>
<li><strong>Cloud Detour - Automation Tool for testing Cloud Applications Resiliency</strong> by Sathiya Shunmugasundaram &amp; Gnani Dathathreya</li>
<li><strong>Mission to Mars: Exploring new worlds with AWS IoT</strong> by Jeroen Resoort</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">LT始まったけど、ICD-10 codeの余計な知識が増えていくw W220.2XDやR461等 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791677468252004352">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">NetflixのChaos Monkeyがユースケースに合わなかったので、CapitalOneが自作したサーバーレスなCloud Detourが近日オープンソース予定 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791688150833852416">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">RasPI+mBotで小型MarsBotを作ってAWS IoT経由でs3上のコントロールパネルから操作するデモ <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/tItS1fqfdG">pic.twitter.com/tItS1fqfdG</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791693673222340608">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>After Party</h3>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">アフターパーティでAppleのイベントをストリーミングしてるw <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/69rcbmwsKI">pic.twitter.com/69rcbmwsKI</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791695401632010241">October 27, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h2>Day 2</h2>

<h3>Sessions</h3>

<p>興味深かったのはnewrelic apm風なlambda専用の解析ツール<a href="https://www.iopipe.com/">IOPipe</a>を作ってる人による<strong>Ops for NoOps</strong>や<a href="https://realm.io/">Realm</a>のFounderによる<strong>Serverless in an Offline-First world</strong>。どちらも自社プロダクトを紹介しつつも結構サーバーレスアーキテクチャでの設計やオペレーションを深掘りした話だった。他は<a href="https://github.com/Miserlou/Zappa">Zappa</a>の作者による<strong>Globally Available Serverless Architectures</strong>がテンポよく進んで見てて飽きなかった。</p>

<ul>
<li><strong>Ops for NoOps: Operational Challenges for Serverless Apps</strong> by Eric Windisch &amp; Pam Selle</li>
<li><strong>Serverless in an Offline-First world</strong> by Alexander Stigsen</li>
<li><strong>The future of serverless</strong> by Paul Johnston</li>
<li><strong>Getting the most out of the Serverless Framework</strong> by Florian Motlik</li>
<li><strong>Serverless API in the Enterprise</strong> by Scott Patterson &amp; Simon Coward</li>
<li><strong>Globally Available Serverless Architectures</strong> by Rich Jones</li>
<li><strong>Serverless Microservices with Google Cloud Functions</strong> by Bret McGowen</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Lambdaのコンテナの最大保存期間は4時間らしい。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/lH9myDtlAa">pic.twitter.com/lH9myDtlAa</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791916637762957312">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Alexa連携のLambdaの中からメトリックを送信して、グラフ化。便利そう。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/IaBMteqy5e">pic.twitter.com/IaBMteqy5e</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791919435934146560">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">RealmのCEOだ！ <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/eQDbgB8yju">pic.twitter.com/eQDbgB8yju</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791926072568713216">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">RESTの理想と現実w <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/luadl5zKlZ">pic.twitter.com/luadl5zKlZ</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791928441410981888">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">The future if serverless. 大層なタイトルだな。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/7XAoRlxFsr">pic.twitter.com/7XAoRlxFsr</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791940529365790720">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ああ、この人か。 <a href="https://t.co/qvQdsXfD14">https://t.co/qvQdsXfD14</a> <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791942085750292480">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Serverless Frameworkの今後について。 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/klOi06BfBW">pic.twitter.com/klOi06BfBW</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791958743755788289">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">昔のサーバーレステクノロジー！ <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/3jOrRJpU4Q">pic.twitter.com/3jOrRJpU4Q</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791973348716797952">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="es" dir="ltr">ACID 2.0 <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/dMxqIZLutf">pic.twitter.com/dMxqIZLutf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791975593407574016">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">高橋メソッドだ！ <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/fPrQVQu6r8">pic.twitter.com/fPrQVQu6r8</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791986231051685888">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Zappaの人か。 <a href="https://t.co/nn0YyfUarm">https://t.co/nn0YyfUarm</a> <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/791988939729100800">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>LT</h3>

<p>MSの人達によるAzureの高速棒読み寸劇が笑えた。</p>

<ul>
<li><strong>Why PubNub moved Serverless Computing into the Network</strong> by Girish Dusane</li>
<li><strong>DevOps for Serverless Applications</strong> by Yochay Kiriaty</li>
<li><strong>Writing Serverless Plugins</strong> by Anna Doubkova</li>
<li><strong>Serverless real-time aggregates</strong> by Christian Blunden</li>
<li><strong>Big data processing simplified with Serverless Map Reduce</strong> by Sunil Mallya</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Azure Functions の実装デモLT。下手な寸劇だw <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/4GEhceY8ck">pic.twitter.com/4GEhceY8ck</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/792021382066479104">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">高速棒読みw <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/792021542867705857">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">How to write Serverless Framework plugins <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/Iy7tJAqZSs">pic.twitter.com/Iy7tJAqZSs</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/792027607088918528">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">LambdaによるMapReduceのframework <a href="https://t.co/HyTefArWmQ">https://t.co/HyTefArWmQ</a> <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/792033437452472325">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="es" dir="ltr">Policies! <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/4AL95D6hBW">pic.twitter.com/4AL95D6hBW</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/792035672366452736">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">YAML Hell <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/Z8ZRDWDRvB">pic.twitter.com/Z8ZRDWDRvB</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/792036230204624896">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">AWS is like crack! <a href="https://twitter.com/hashtag/serverlessconf?src=hash">#serverlessconf</a> <a href="https://t.co/7e9TYfBfgG">pic.twitter.com/7e9TYfBfgG</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/792036685513101312">October 28, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>感想</h3>

<p>セッションもまあまあ面白かったりしたけど、<a href="https://serverless.com/">Serverless Framework</a>等各種ツールの作者と直接話したり、各国のエンジニアとサービス運用について細かく議論できるのが有意義でした。ヨーロッパ圏の人がメインだけど、意外とアメリカからも沢山来てて終始盛り上がりました。日本からはServerlessConf Tokyoの主催者のセクションナイン<a href="https://twitter.com/yoshidashingo/">吉田さん</a>や<a href="https://twitter.com/toricls/">もっぱらさん</a>等が来英した他、クラスメソッドのベルリンリージョンにいる吉田さんがわざわざ<a href="http://dev.classmethod.jp/series/serverlessconf-london/">メソりに</a>来てて、ノルマ大変そうだなぁと思ったり。</p>

<p>後、LTに関しては日本の方が絶対レベルが上だと思う！自社プロダクトの紹介とかやめて。。</p>

<h3>Videos</h3>

<p>ちなみにセッションの動画は<a href="https://www.youtube.com/channel/UCqlcVgk8SkUmve4Kw4xSlgw/feed">ここ</a>から見れます。</p>

<h3>おまけ</h3>

<p>カンファレンスの雰囲気。インタビューされちゃいました。</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/bl1IuuqBwo4 "></iframe></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS GameDay Japan 2016を開催してきた]]></title>
    <link href="http://ijin.github.io/blog/2016/07/29/aws-gameday-japan-2016/"/>
    <updated>2016-07-29T15:41:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/07/29/aws-gameday-japan-2016</id>
    <content type="html"><![CDATA[<p>過去に何回も参加・開催両方を経験した事がある<a href="http://gameday-japan.connpass.com/event/33531/">AWS GameDay</a>に、またしても運営側として関わりました。</p>

<p>お題は基本的に<a href="http://ijin.github.io/blog/2015/10/26/aws-re-invent-2015/">去年のre:Inventでやった</a>のを若干チューニングしたやつ。
詳細は今後また別のところで開催される可能性があるので、その時の参加者の為に伏せておきます。</p>

<h3>当日</h3>

<p>競技中はそれぞれのチームのスコアがリアルタイムで見れるダッシュボードがあって白熱した様子が伝わってました。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">みんないろいろ実験中 <a href="https://twitter.com/hashtag/AWSGameDayJapan?src=hash">#AWSGameDayJapan</a> <a href="https://t.co/D2rIlhRV5T">pic.twitter.com/D2rIlhRV5T</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/756717339312164864">July 23, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>これはこれで楽しいんですが、何かが足りない感じ。。。</p>

<br >


<br >


<br >


<br >


<br >


<p>そう、<strong>グラフ</strong>です！!</p>

<br >


<br >


<br >


<br >


<br >


<p>参加チームの白熱したバトル（順位の入れ替え等）を時系列で表示し、戦いの軌跡をビジュアライズするアレです。ISUCONでもよく見慣れたあの遷移するグラフがなかったのです！</p>

<p>開始してから気づきました。。</p>

<h1>なので作りました</h1>

<h2>Graphing premiere</h2>

<p>ダッシュボードの作りを見てみると <code>jQuery</code> と <code>React.js</code> を使っている模様。ならば、どこかでendpointを叩いてjsonを取得しているはずなので、いろいろ探したところ、それらしいのがありました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="nx">getScores</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;https://xxxxxxxxx.execute-api.us-west-2.amazonaws.com/prod/scores&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">dataType</span><span class="o">:</span> <span class="s1">&#39;json&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">cache</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span> <span class="nx">data</span><span class="p">});</span>
</span><span class='line'>      <span class="p">}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span>
</span><span class='line'>      <span class="nx">error</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">xhr</span><span class="p">,</span> <span class="nx">status</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;scores&quot;</span><span class="p">,</span> <span class="nx">status</span><span class="p">,</span> <span class="nx">err</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span>
</span><span class='line'>      <span class="p">}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">)</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>


<p>こうなれば話は簡単で後は返却されるjsonを解析して、定期的にcallしてplotしていけば良いだけです。</p>

<h3>データ送信</h3>

<p>グラフを描画するサーバを用意するのはしんどいので、カスタムメトリックスが作成できる監視サービスを使いました。
最初は<a href="https://mackerel.io">Mackerel</a>をと思ったけど、独自グラフを一般公開する設定がなさそうだったので<a href="https://www.datadoghq.com">Datadog</a>を採用。</p>

<p>Datadogでカスタムメトリックスを送るにはAPIを直接叩くよりは、<a href="http://docs.datadoghq.com/guides/metrics/">StatsD経由で送信</a>した方が楽なのでrubyでサクっと適当に記述。</p>

<figure class='code'><figcaption><span>gameday.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">statsd</span><span class="o">.</span><span class="n">batch</span> <span class="k">do</span> <span class="o">|</span><span class="n">s</span><span class="o">|</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">gauge</span><span class="p">(</span><span class="s1">&#39;gameday2016&#39;</span><span class="p">,</span> <span class="n">scores</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="s1">&#39;Profit&#39;</span><span class="o">]*</span><span class="mi">100</span><span class="p">,</span> <span class="ss">:tags</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;team:&quot;</span> <span class="o">+</span> <span class="n">scores</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="s1">&#39;Team&#39;</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">gauge</span><span class="p">(</span><span class="s1">&#39;gameday2016&#39;</span><span class="p">,</span> <span class="n">scores</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="s1">&#39;Profit&#39;</span><span class="o">]*</span><span class="mi">100</span><span class="p">,</span> <span class="ss">:tags</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;team:&quot;</span> <span class="o">+</span> <span class="n">scores</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="s1">&#39;Team&#39;</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">s</span><span class="o">.</span><span class="n">gauge</span><span class="p">(</span><span class="s1">&#39;gameday2016&#39;</span><span class="p">,</span> <span class="n">scores</span><span class="o">[</span><span class="mi">2</span><span class="o">][</span><span class="s1">&#39;Profit&#39;</span><span class="o">]*</span><span class="mi">100</span><span class="p">,</span> <span class="ss">:tags</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;team:&quot;</span> <span class="o">+</span> <span class="n">scores</span><span class="o">[</span><span class="mi">2</span><span class="o">][</span><span class="s1">&#39;Team&#39;</span><span class="o">]]</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># etc</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>グラフ描画</h3>

<p>公開ダッシュボードを作成するには <code>TimeBoard</code> ではなく <code>ScreenBoard</code> を選択し、後は必要そうなグラフを追加していくだけ。</p>

<p>グラフ自体はGUIで作っても良いし、jsonで記述可能なので結構柔軟で素敵です。</p>

<figure class='code'><figcaption><span>profits.json</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;viz&quot;</span><span class="p">:</span> <span class="s2">&quot;timeseries&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;requests&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;q&quot;</span><span class="p">:</span> <span class="s2">&quot;avg:gameday2016{*} by {team}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;aggregator&quot;</span><span class="p">:</span> <span class="s2">&quot;avg&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;conditional_formats&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>      <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;line&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ranking.json</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;viz&quot;</span><span class="p">:</span> <span class="s2">&quot;toplist&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;requests&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;q&quot;</span><span class="p">:</span> <span class="s2">&quot;top(avg:gameday2016{*} by {team}, 20, &#39;last&#39;, &#39;desc&#39;)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;style&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;palette&quot;</span><span class="p">:</span> <span class="s2">&quot;dog_classic&quot;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nt">&quot;conditional_formats&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;palette&quot;</span><span class="p">:</span> <span class="s2">&quot;white_on_green&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;comparator&quot;</span><span class="p">:</span> <span class="s2">&quot;&gt;=&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;value&quot;</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="nt">&quot;palette&quot;</span><span class="p">:</span> <span class="s2">&quot;white_on_red&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;comparator&quot;</span><span class="p">:</span> <span class="s2">&quot;&lt;&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nt">&quot;value&quot;</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>できあがったグラフはこんな感じ。
高負荷発生等のイベント時の対応との比較もできて見やすいと思います。</p>

<p><img src="https://lh3.googleusercontent.com/XoNcTN3HQIlFDHvaSe8uNlcCP8FYRijZNsPVdrnrsmNvEF3XoW6IUDKnU63JDLL7X6W3Ed3mCLaF=w742-h394-no"></p>

<p>これで各チームのポジション等を伝えやすくなりました。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">お、チームshoroumaruが逆転！ <a href="https://twitter.com/hashtag/AWSGameDayJapan?src=hash">#AWSGameDayJapan</a> <a href="https://t.co/kr0oSRgcIj">pic.twitter.com/kr0oSRgcIj</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/756756052192792576">July 23, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">チームshorumaruが独走中 <a href="https://twitter.com/hashtag/AWSGameDayJapan?src=hash">#AWSGameDayJapan</a> <a href="https://t.co/0HPTJk6Myh">pic.twitter.com/0HPTJk6Myh</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/756766379341025281">July 23, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">スコアとグラフ <a href="https://twitter.com/ijin">@ijin</a> チームshoroumaruが圧倒的な差をつけて優勝！ <a href="https://twitter.com/hashtag/AWSGameDayJapan?src=hash">#AWSGameDayJapan</a> <a href="https://t.co/Cs1xd506oE">pic.twitter.com/Cs1xd506oE</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/756778321749225472">July 23, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>というわけで優勝した<a href="http://inokara.hateblo.jp/entry/2016/07/24/095228">チーム初老丸</a>、おめでとうございます！</p>

<h3>終わりに</h3>

<p>今回は競技の途中から実装しちゃったので次回は最初から用意しておきたいと思います。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">isuconの試合途中結果を勝手にdatadogに流してるやつwwwwwwwwwwwww <a href="https://t.co/CXDO15vV68">https://t.co/CXDO15vV68</a> <a href="https://twitter.com/hashtag/isucon?src=hash">#isucon</a></p>&mdash; そらは (@sora_h) <a href="https://twitter.com/sora_h/status/660379055867334656">October 31, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>（※）実は去年のISUCONの時も似たような事をやってましたね。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DockerCon 2016に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2016/06/28/dockercon-2016/"/>
    <updated>2016-06-28T10:17:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/06/28/dockercon-2016</id>
    <content type="html"><![CDATA[<p>先日、<a href="http://2016.dockercon.com/">DockerCon 2016</a>に参加してきたので、そのメモ。</p>

<h2>To DockerCon you go!</h2>

<script async="true" class="speakerdeck-embed" data-id="dd1706017844461583368f3aec9e49b5" src="http://ijin.github.io//speakerdeck.com/assets/embed.js"> </script>


<p>ちなみに行く事になった経緯は後日の<a href="http://qiita.com/t-sato/items/b7d33ac38205fe5d2997">JAWS-UGおコンテナ支部 #5</a>でLTしてきました。</p>

<p>パッション大事！</p>

<p>以下、トゥギャッター風に。</p>

<h2>Day 0</h2>

<h3>Pre-Registration &amp; Welcome Party</h3>

<p><img src="https://lh3.googleusercontent.com/EbICBfukR41-rSVc75vfqKH1FW2-tjRofVSSohIEgD4iQMFZImz7wmZc7j6mihcVavhwFStPFKGr=w455-h606-no"></p>

<p>場所はシアトルのWashington State Convention Center。何気にこの地に訪れるのは初。</p>

<p><img src="https://lh3.googleusercontent.com/gcFQaHyxe0yqMvFKpAyMuF0Ht7_NSq4MwIysYy_pkbk6XKhSgme1uCA_h0aBAewWq1LTqEkUv_Lu=w455-h606-no"></p>

<p>Welcome to DockerCon 2016!</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Moby Dock! <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/cNwtOeLxlI">pic.twitter.com/cNwtOeLxlI</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744699319534575616">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p><img src="https://lh3.googleusercontent.com/pQvzcaHk0EzEjoHTUwENIzW25Mou2QfQ9DiVZXflPalOgvG7B9S9ZCFVyq6W7lRPSBdU746_6-I7=w808-h606-no"></p>

<p>企業ブース</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">20時なのにすごい明るい。 <a href="https://t.co/bjdAPk9PKo">pic.twitter.com/bjdAPk9PKo</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744729346259070976">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p><img src="https://lh3.googleusercontent.com/UhiotzEzNdpO855q4fqariqpi7yzQyMVunDPAbuTW6QwgvgtI55zuJx8R2ox9siM8AuR-2oHeWIw=w808-h606-no"></p>

<p>Welcome Party</p>

<p><img src="https://lh3.googleusercontent.com/X3cd_omPYz3s1oHy5gbowLj7HZG3uwnotMA9WY3UF5qS5PlZ9tiYkoX3FHi0N68E-GoMbmiWi1A_=w793-h595-no"></p>

<p>Bar</p>

<h2>Day 1</h2>

<h3>Highlights</h3>

<ul>
<li>Docker 1.12 (orchestration built-in)

<ul>
<li>swarm mode</li>
<li>serice api</li>
<li>cryptographic node identity</li>
<li>build-in routing mesh</li>
</ul>
</li>
<li>Experimental Distributed Application Bundles (DAB)</li>
<li>Docker for AWS &amp; Azure (beta)</li>
<li>Docker for Mac &amp; Windows (public beta)</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/S1EdQrzioZdPZ5B4xpcHefQOIXnCeQgeRDXA2nm-Rwx5rDLNQrIHV7GaoG6OlYh_WTEVmfLZK5qa=w455-h606-no"></p>

<p>ぞろぞろ</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">これは。。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/rB563DXO5P">pic.twitter.com/rB563DXO5P</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744923494589202432">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">広い。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/WJbjh4olWJ">pic.twitter.com/WJbjh4olWJ</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744923505871839233">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">2014 - 500 attendees<br>2015 - 2000 attendees<br>2016 - 4000 attendees<a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744928052858126338">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Cats shooting lasers. So random. <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/uuiQBHLell">pic.twitter.com/uuiQBHLell</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744928124815577088">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Live de-bugging inside a container with <a href="https://twitter.com/docker">@docker</a> for Mac and Windows by <a href="https://twitter.com/AanandPrasad">@AanandPrasad</a> <a href="https://twitter.com/hashtag/dockercon?src=hash">#dockercon</a> <a href="https://t.co/zAUvVUOEc5">pic.twitter.com/zAUvVUOEc5</a></p>&mdash; Betty Junod (@BettyJunod) <a href="https://twitter.com/BettyJunod/status/744935919673708544">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>




<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Docker 1.12<br>- Swarm mode<br>- Cryptographic node identity<br>- Service API<br>- Built-in routing mesh<a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744941579647913984">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Distributed Application Bundle <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/IKhFIdx9Pf">pic.twitter.com/IKhFIdx9Pf</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744950295835217920">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>Sessions</h3>

<ul>
<li>The Golden Ticket: Docker and High Security Microservices</li>
<li>Microservices + Events + Docker = A Perfect Trio</li>
<li>Thinking Inside the Container: A Continuous Delivery Story</li>
<li>Docker in Production, Look No Hands!</li>
</ul>


<p><strong>The Golden Ticket: Docker and High Security Microservices</strong></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">apparmor example on golang+docker <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/rwuzMYdpIF">pic.twitter.com/rwuzMYdpIF</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744973236203446272">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Sysdig 便利そう。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/9a0ruRZK9w">pic.twitter.com/9a0ruRZK9w</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744975496308359168">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Seccomp pro tips for Docker/runC <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/4n4w4lNlxO">pic.twitter.com/4n4w4lNlxO</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744976420074446849">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p><strong>Microservices + Events + Docker = A Perfect Trio</strong></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Microservices + Events + Docker = A Perfect Trio <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/MnbK8FO7OL">pic.twitter.com/MnbK8FO7OL</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/744999360421732352">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">The Art of Scalability <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/aX3MhHiwAO">pic.twitter.com/aX3MhHiwAO</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745000882610274304">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">How to atomically update database and publish an event - use event-sourcing. <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/cOoCA9N15m">pic.twitter.com/cOoCA9N15m</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745004762962223104">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="und" dir="ltr"><a href="https://t.co/udEVJFzxSM">https://t.co/udEVJFzxSM</a> <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/zFpQbTLvLA">pic.twitter.com/zFpQbTLvLA</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745009602677248000">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p><strong>Thinking Inside the Container: A Continuous Delivery Story</strong></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Thinking Inside the Container: A Continuous Delivery Story <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/5Mr6ijoXYF">pic.twitter.com/5Mr6ijoXYF</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745012607329906688">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">10,000-14,000 containers a week.  <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/MXtu23Eg7G">pic.twitter.com/MXtu23Eg7G</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745013610032803840">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">The reality&#8230; <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/huScMIX8Ce">pic.twitter.com/huScMIX8Ce</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745014086392381440">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">So simple! <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/ZfIzpHEQKm">pic.twitter.com/ZfIzpHEQKm</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745019391960481792">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="fr" dir="ltr">Garbage Collection <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/qUYqmr0TpY">pic.twitter.com/qUYqmr0TpY</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745019998523908100">June 20, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>DockerCon party @ Space Needle</h3>

<p>最後はシアトルの名所（？）、<a href="http://www.spaceneedle.com">Space Needle</a>での貸切パーティー</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr"><a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> party! <a href="https://t.co/EIl3FoNUZd">pic.twitter.com/EIl3FoNUZd</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745097049478045696">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p><img src="https://lh3.googleusercontent.com/k_fJmctUgvWrWhlHNFsf1taBDn68iRM9fDDOIEZKkmvaPD03bY1bD4Wd_JGOw8f4pRygew0rKx08=w455-h606-no"></p>

<p>中でもワイワイ</p>

<h2>Day 2</h2>

<h3>Highlights</h3>

<ul>
<li>Docker Datacenter</li>
<li>AWS Quickstart</li>
<li>Azure Marcketplace Templates</li>
<li>Docker Store (private beta)</li>
</ul>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="und" dir="ltr">Day 2! <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/jVobmfYqEO">pic.twitter.com/jVobmfYqEO</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745288065803968512">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">今日のテーマは&quot;Democratizing Docker for the Enterprise&quot; <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745288586803613696">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>個人的には、とある企業でのDockerのユースケースを演じる漫才が面白かった。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Enterprise Opsの日常。まずredditで狐の動画を見る。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/PtBhwieitx">pic.twitter.com/PtBhwieitx</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745294134190170112">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">昨日のデモは猫vs犬の投票システムだったけど、今日のエンプラ版はISOの投票になってる。9000 vs 9001 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/5Cm8jPsUWy">pic.twitter.com/5Cm8jPsUWy</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745294892423745536">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">&quot;I&#39;m going to Burning Man&quot; <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/B6vnsZfnDX">pic.twitter.com/B6vnsZfnDX</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745295726700224513">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Oh no, Nosebleed!! <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/9FjwpBXNCd">pic.twitter.com/9FjwpBXNCd</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745296068259123201">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">“The Nosebleed OpenSSL Bug” <a href="https://twitter.com/hashtag/DockCon?src=hash">#DockCon</a> <a href="https://t.co/HqHJl6sNM4">https://t.co/HqHJl6sNM4</a></p>&mdash; Marius Ducea (@mariusducea) <a href="https://twitter.com/mariusducea/status/745296465094860802">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">&quot;I brought you some  coffee. It doesn&#39;t have all the substances you might have gotten at Burning Man&quot; <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/7mTHpBCDMC">pic.twitter.com/7mTHpBCDMC</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745297941535981569">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>AzureのCTO</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="eu" dir="ltr">Azure CTO <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/6DHOavOAU4">pic.twitter.com/6DHOavOAU4</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745300074528333824">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">AzureのCTOがMacとChromeでデモしてる。</p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745300681104359424">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">MacのVisual Studio CodeでC#出来るよアピールか。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745301503926165504">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">デモ失敗w <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745302570936086528">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>ADPのCTO</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">巨漢。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/LbXqA01J2o">pic.twitter.com/LbXqA01J2o</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745305740873633792">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">鼻息がwww <a href="https://twitter.com/hashtag/dockercon?src=hash">#dockercon</a></p>&mdash; Keisuke Nishitani (@Keisuke69) <a href="https://twitter.com/Keisuke69/status/745305275972759552">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">いや、良い事言ってるんだけど、どうしても鼻息の方が気になるw</p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745306231712022528">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">&quot;Microservices are like chicken nuggets, but we have chickens&quot; <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/AZLfOyKgQ7">pic.twitter.com/AZLfOyKgQ7</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745308374997184512">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>Sessions</h3>

<ul>
<li>Making Friendly Microservices</li>
<li>Sharding Containers: Make Go Apps Computer-Friendly Again</li>
<li>Closing General Session: Moby Dock&#8217;s Cool Hacks</li>
</ul>


<p><strong>Making Friendly Microservices</strong></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Friendly microservices <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/onL94wSudp">pic.twitter.com/onL94wSudp</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745353738508853248">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">お、Atlasが出てきた。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/rqzoOfLvbY">pic.twitter.com/rqzoOfLvbY</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745357805347999745">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Zipkin知らんかった。 microservices 向けの分散追跡システムらしい。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/cSfQPXImFG">pic.twitter.com/cSfQPXImFG</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745357873098567683">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p><strong>Sharding Containers: Make Go Apps Computer-Friendly Again</strong></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">wrkでベンチマーク。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/vxmAUK7U5B">pic.twitter.com/vxmAUK7U5B</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745398037497806849">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p><strong>Closing General Session: Moby Dock&#8217;s Cool Hacks</strong></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Jeff Nickoloff taking about Services. <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/DjHBYBw4dp">pic.twitter.com/DjHBYBw4dp</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745405126408450050">June 21, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Demo on Entropy - a failure orchestration microservicen for Docker platforms <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745406128679333890">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Docker用の chaos monkeyみたいなやつか。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745406672416342016">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">latency injection <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/xseLsGyaGH">pic.twitter.com/xseLsGyaGH</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745407885035724800">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>Serverless Dockerが面白かった。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="de" dir="ltr">Serverless Docker!? <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/rVxbSelFkq">pic.twitter.com/rVxbSelFkq</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745408340319051781">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Docker内のコードからDocker Swarm上で コンテナを実行して Serverlessを実現。なるほど。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745410551778410496">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">How to run Serverless Docker <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/QjNQzpTk7q">pic.twitter.com/QjNQzpTk7q</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745410776848990208">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Get involved! <a href="https://t.co/fjFuAACXZR">https://t.co/fjFuAACXZR</a> <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://twitter.com/hashtag/serverlessdocker?src=hash">#serverlessdocker</a> <a href="https://t.co/ro4XuBWLVw">pic.twitter.com/ro4XuBWLVw</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745411486625861633">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Lambda内でも docker実行出来たら良いな。</p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745411898510704640">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>Docker on Drones</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">飛行中のドローンに搭載してる dockerをライブアップデート。すごい。 <a href="https://twitter.com/hashtag/DockerCon?src=hash">#DockerCon</a> <a href="https://t.co/RKWjExgTtu">pic.twitter.com/RKWjExgTtu</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/745412950551212034">June 22, 2016</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h2>終わりに</h2>

<p>世界各国のエンジニアと話せて、Dockerに対する熱量や動向を肌感覚で感じとれて非常に有意義な旅でした。以前の<a href="http://ijin.github.io/blog/2014/04/21/chefconf-2014/">ChefConf</a>や<a href="http://ijin.github.io/blog/2015/09/30/hashiconf-2015/">HashiConf</a>もそうだけど、気になる技術やトレンドがあればTechカンファレンスに直接乗り込んで見るのが一番効率的なので、今後も継続してどこかに参加するようにしたいです。</p>

<p>Thank you!</p>

<p><img src="https://lh3.googleusercontent.com/yPy0EnK1ewU3HbrQyT6pSxR-G--QAHZ2fmwLJ09Jh14sw9yju2q1DQd3pIin-AXJ0ohAJeRqxhAE=w455-h606-no"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TerraformでAPI Gatewway]]></title>
    <link href="http://ijin.github.io/blog/2016/04/28/terraforming-api-gatewways/"/>
    <updated>2016-04-28T18:01:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/04/28/terraforming-api-gatewways</id>
    <content type="html"><![CDATA[<p>つい先日、<a href="https://terraform.io/">Terraform</a>でずっと気になっていたAmazon API Gatewayの<code>selection_pattern</code>の<a href="https://github.com/hashicorp/terraform/pull/5893">pull request</a>がmergeされました。</p>

<p>今まではAPI GWをInfrastructure As Codeで構築するにあたって複数のintegration responseパターンを返却できないのがネックだったのが、これでようやく解決。途中までTerraformで作って、その後に以下のようにawscliで追加するというちょっと煩わしい手順でした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>REST_ID=$(aws apigateway get-rest-apis --query 'items[?name==`my_api`].id' --output text)
</span><span class='line'>RESOURCE_ID=$(aws apigateway get-resources --rest-api-id $REST_ID --query 'items[?path==`/my_path`].id' --output text)
</span><span class='line'>aws apigateway put-integration-response --rest-api-id $REST_ID --resource-id $RESOURCE_ID --http-method GET --status-code 400 --response-templates '{"application/json": "$input.path('$').errorMessage"}' --selection-pattern "[^0-9](.|\n)*" </span></code></pre></td></tr></table></div></figure>


<p>というわけで、早速実験。お題は以前<a href="http://ijin.github.io/blog/2015/11/04/elastic-beanstalk-easy-ssh/">紹介した</a>Elastic Beanstalk ssh用のAPI GWで。</p>

<h3>Terraform version</h3>

<p>まずは、<code>master</code>にmergeされた開発版Terraformのビルド。やり方は<a href="http://ijin.github.io/blog/2016/03/31/using-terraform-dev-versions/">こちら</a>。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ terraform version
</span><span class='line'>Terraform v0.6.16-dev - 5cd27c2</span></code></pre></td></tr></table></div></figure>


<h3>Terraform file</h3>

<p>API GWのterraform化はこんな感じで。</p>

<div><script src='https://gist.github.com/db027846fefb339187e3f2833fe2d034.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<p>(*) permissionはlambda作成後に許可</p>

<h3>Terraform plan/apply</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ terraform plan
</span><span class='line'>Refreshing Terraform state prior to plan...
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>The Terraform execution plan has been generated and is shown below.
</span><span class='line'>Resources are shown in alphabetical order for quick scanning. Green resources
</span><span class='line'>will be created (or destroyed and then created if an existing resource
</span><span class='line'>exists), yellow resources are being changed in-place, and red resources
</span><span class='line'>will be destroyed.
</span><span class='line'>
</span><span class='line'>Note: You didn't specify an "-out" parameter to save this plan, so when
</span><span class='line'>"apply" is called, Terraform can't guarantee this is what will execute.
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_deployment.eb_deployment
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    stage_name:  "" =&gt; "prod"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_integration.ip_get
</span><span class='line'>    http_method:                        "" =&gt; "GET"
</span><span class='line'>    integration_http_method:            "" =&gt; "POST"
</span><span class='line'>    request_templates.#:                "" =&gt; "1"
</span><span class='line'>    request_templates.application/json: "" =&gt; "{ \"env_name\": \"$input.params('env_name')\" }"
</span><span class='line'>    resource_id:                        "" =&gt; "${aws_api_gateway_resource.ip.id}"
</span><span class='line'>    rest_api_id:                        "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    type:                               "" =&gt; "AWS"
</span><span class='line'>    uri:                                "" =&gt; "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:123456789012:function:eb_ip/invocations"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_integration.server_num_get
</span><span class='line'>    http_method:                        "" =&gt; "GET"
</span><span class='line'>    integration_http_method:            "" =&gt; "POST"
</span><span class='line'>    request_templates.#:                "" =&gt; "1"
</span><span class='line'>    request_templates.application/json: "" =&gt; "{\n \"env_name\": \"$input.params('env_name')\",\n \"server_num\": \"$input.params('server_num')\" \n}"
</span><span class='line'>    resource_id:                        "" =&gt; "${aws_api_gateway_resource.server_num.id}"
</span><span class='line'>    rest_api_id:                        "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    type:                               "" =&gt; "AWS"
</span><span class='line'>    uri:                                "" =&gt; "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:123456789012:function:eb_ip/invocations"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_integration_response.ip_get_200
</span><span class='line'>    http_method:                         "" =&gt; "GET"
</span><span class='line'>    resource_id:                         "" =&gt; "${aws_api_gateway_resource.ip.id}"
</span><span class='line'>    response_templates.#:                "" =&gt; "1"
</span><span class='line'>    response_templates.application/json: "" =&gt; "$input.path('$')"
</span><span class='line'>    rest_api_id:                         "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    status_code:                         "" =&gt; "200"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_integration_response.ip_get_400
</span><span class='line'>    http_method:                         "" =&gt; "GET"
</span><span class='line'>    resource_id:                         "" =&gt; "${aws_api_gateway_resource.ip.id}"
</span><span class='line'>    response_templates.#:                "" =&gt; "1"
</span><span class='line'>    response_templates.application/json: "" =&gt; "$input.path('$').errorMessage"
</span><span class='line'>    rest_api_id:                         "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    selection_pattern:                   "" =&gt; "[^0-9](.|\n)*"
</span><span class='line'>    status_code:                         "" =&gt; "400"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_integration_response.server_num_get_200
</span><span class='line'>    http_method:                         "" =&gt; "GET"
</span><span class='line'>    resource_id:                         "" =&gt; "${aws_api_gateway_resource.server_num.id}"
</span><span class='line'>    response_templates.#:                "" =&gt; "1"
</span><span class='line'>    response_templates.application/json: "" =&gt; "$input.path('$')"
</span><span class='line'>    rest_api_id:                         "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    status_code:                         "" =&gt; "200"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_integration_response.server_num_get_400
</span><span class='line'>    http_method:                         "" =&gt; "GET"
</span><span class='line'>    resource_id:                         "" =&gt; "${aws_api_gateway_resource.server_num.id}"
</span><span class='line'>    response_templates.#:                "" =&gt; "1"
</span><span class='line'>    response_templates.application/json: "" =&gt; "$input.path('$').errorMessage"
</span><span class='line'>    rest_api_id:                         "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    selection_pattern:                   "" =&gt; "[^0-9](.|\n)*"
</span><span class='line'>    status_code:                         "" =&gt; "400"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_method.ip_get
</span><span class='line'>    api_key_required: "" =&gt; "0"
</span><span class='line'>    authorization:    "" =&gt; "NONE"
</span><span class='line'>    http_method:      "" =&gt; "GET"
</span><span class='line'>    resource_id:      "" =&gt; "${aws_api_gateway_resource.ip.id}"
</span><span class='line'>    rest_api_id:      "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_method.server_num_get
</span><span class='line'>    api_key_required: "" =&gt; "0"
</span><span class='line'>    authorization:    "" =&gt; "NONE"
</span><span class='line'>    http_method:      "" =&gt; "GET"
</span><span class='line'>    api_key_required: "" =&gt; "0"
</span><span class='line'>    authorization:    "" =&gt; "NONE"
</span><span class='line'>    http_method:      "" =&gt; "GET"
</span><span class='line'>    resource_id:      "" =&gt; "${aws_api_gateway_resource.server_num.id}"
</span><span class='line'>    rest_api_id:      "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_method_response.ip_200
</span><span class='line'>    http_method: "" =&gt; "GET"
</span><span class='line'>    resource_id: "" =&gt; "${aws_api_gateway_resource.ip.id}"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    status_code: "" =&gt; "200"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_method_response.ip_400
</span><span class='line'>    http_method: "" =&gt; "GET"
</span><span class='line'>    resource_id: "" =&gt; "${aws_api_gateway_resource.ip.id}"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    status_code: "" =&gt; "400"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_method_response.server_num_200
</span><span class='line'>    http_method: "" =&gt; "GET"
</span><span class='line'>    resource_id: "" =&gt; "${aws_api_gateway_resource.server_num.id}"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    status_code: "" =&gt; "200"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_method_response.server_num_400
</span><span class='line'>    http_method: "" =&gt; "GET"
</span><span class='line'>    resource_id: "" =&gt; "${aws_api_gateway_resource.server_num.id}"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>    status_code: "" =&gt; "400"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_resource.eb
</span><span class='line'>    parent_id:   "" =&gt; "${aws_api_gateway_rest_api.EB.root_resource_id}"
</span><span class='line'>    path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>    path_part:   "" =&gt; "eb"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_resource.env_name
</span><span class='line'>    parent_id:   "" =&gt; "${aws_api_gateway_resource.eb.id}"
</span><span class='line'>    path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>    path_part:   "" =&gt; "{env_name}"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_resource.ip
</span><span class='line'>    parent_id:   "" =&gt; "${aws_api_gateway_resource.env_name.id}"
</span><span class='line'>    path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>    path_part:   "" =&gt; "ip"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_resource.server_num
</span><span class='line'>    parent_id:   "" =&gt; "${aws_api_gateway_resource.ip.id}"
</span><span class='line'>    path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>    path_part:   "" =&gt; "{server_num}"
</span><span class='line'>    rest_api_id: "" =&gt; "${aws_api_gateway_rest_api.EB.id}"
</span><span class='line'>
</span><span class='line'>+ aws_api_gateway_rest_api.EB
</span><span class='line'>    description:      "" =&gt; "get EB info"
</span><span class='line'>    name:             "" =&gt; "EB"
</span><span class='line'>    root_resource_id: "" =&gt; "&lt;computed&gt;"
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Plan: 18 to add, 0 to change, 0 to destroy.</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ terraform apply
</span><span class='line'>aws_api_gateway_rest_api.EB: Creating...
</span><span class='line'>  description:      "" =&gt; "get EB info"
</span><span class='line'>  name:             "" =&gt; "EB"
</span><span class='line'>  root_resource_id: "" =&gt; "&lt;computed&gt;"
</span><span class='line'>aws_api_gateway_rest_api.EB: Creation complete
</span><span class='line'>aws_api_gateway_resource.eb: Creating...
</span><span class='line'>  parent_id:   "" =&gt; "k9x3d7qlhd"
</span><span class='line'>  path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>  path_part:   "" =&gt; "eb"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>aws_api_gateway_resource.eb: Creation complete
</span><span class='line'>aws_api_gateway_resource.env_name: Creating...
</span><span class='line'>  parent_id:   "" =&gt; "nr2lkm"
</span><span class='line'>  path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>  path_part:   "" =&gt; "{env_name}"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>aws_api_gateway_resource.env_name: Creation complete
</span><span class='line'>aws_api_gateway_resource.ip: Creating...
</span><span class='line'>  parent_id:   "" =&gt; "g29h7n"
</span><span class='line'>  path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>  path_part:   "" =&gt; "ip"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>aws_api_gateway_resource.ip: Creation complete
</span><span class='line'>aws_api_gateway_resource.server_num: Creating...
</span><span class='line'>  parent_id:   "" =&gt; "sthj28"
</span><span class='line'>  path:        "" =&gt; "&lt;computed&gt;"
</span><span class='line'>  path_part:   "" =&gt; "{server_num}"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>aws_api_gateway_method.ip_get: Creating...
</span><span class='line'>  api_key_required: "" =&gt; "0"
</span><span class='line'>  authorization:    "" =&gt; "NONE"
</span><span class='line'>  http_method:      "" =&gt; "GET"
</span><span class='line'>  resource_id:      "" =&gt; "sthj28"
</span><span class='line'>  rest_api_id:      "" =&gt; "mdsyn3w42a"
</span><span class='line'>aws_api_gateway_method.ip_get: Creation complete
</span><span class='line'>aws_api_gateway_method_response.ip_200: Creating...
</span><span class='line'>  http_method: "" =&gt; "GET"
</span><span class='line'>  resource_id: "" =&gt; "sthj28"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>  status_code: "" =&gt; "200"
</span><span class='line'>aws_api_gateway_integration.ip_get: Creating...
</span><span class='line'>  http_method:                        "" =&gt; "GET"
</span><span class='line'>  integration_http_method:            "" =&gt; "POST"
</span><span class='line'>  request_templates.#:                "" =&gt; "1"
</span><span class='line'>  request_templates.application/json: "" =&gt; "{ \"env_name\": \"$input.params('env_name')\" }"
</span><span class='line'>  resource_id:                        "" =&gt; "sthj28"
</span><span class='line'>  rest_api_id:                        "" =&gt; "mdsyn3w42a"
</span><span class='line'>  type:                               "" =&gt; "AWS"
</span><span class='line'>  uri:                                "" =&gt; "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:123456789012:function:eb_ip/invocations"
</span><span class='line'>aws_api_gateway_resource.server_num: Creation complete
</span><span class='line'>aws_api_gateway_method.server_num_get: Creating...
</span><span class='line'>  api_key_required: "" =&gt; "0"
</span><span class='line'>  authorization:    "" =&gt; "NONE"
</span><span class='line'>  http_method:      "" =&gt; "GET"
</span><span class='line'>  resource_id:      "" =&gt; "9w68fs"
</span><span class='line'>  rest_api_id:      "" =&gt; "mdsyn3w42a"
</span><span class='line'>aws_api_gateway_method_response.ip_200: Creation complete
</span><span class='line'>aws_api_gateway_method_response.ip_400: Creating...
</span><span class='line'>  http_method: "" =&gt; "GET"
</span><span class='line'>  resource_id: "" =&gt; "sthj28"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>  status_code: "" =&gt; "400"
</span><span class='line'>aws_api_gateway_integration_response.ip_get_200: Creating...
</span><span class='line'>  http_method:                         "" =&gt; "GET"
</span><span class='line'>  resource_id:                         "" =&gt; "sthj28"
</span><span class='line'>  response_templates.#:                "" =&gt; "1"
</span><span class='line'>  response_templates.application/json: "" =&gt; "$input.path('$')"
</span><span class='line'>  rest_api_id:                         "" =&gt; "mdsyn3w42a"
</span><span class='line'>  status_code:                         "" =&gt; "200"
</span><span class='line'>aws_api_gateway_integration.ip_get: Creation complete
</span><span class='line'>aws_api_gateway_method.server_num_get: Creation complete
</span><span class='line'>aws_api_gateway_method_response.server_num_200: Creating...
</span><span class='line'>  http_method: "" =&gt; "GET"
</span><span class='line'>  resource_id: "" =&gt; "9w68fs"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>  status_code: "" =&gt; "200"
</span><span class='line'>aws_api_gateway_integration.server_num_get: Creating...
</span><span class='line'>  http_method:                        "" =&gt; "GET"
</span><span class='line'>  integration_http_method:            "" =&gt; "POST"
</span><span class='line'>  request_templates.#:                "" =&gt; "1"
</span><span class='line'>  request_templates.application/json: "" =&gt; "{\n \"env_name\": \"$input.params('env_name')\",\n \"server_num\": \"$input.params('server_num')\" \n}"
</span><span class='line'>  resource_id:                        "" =&gt; "9w68fs"
</span><span class='line'>  rest_api_id:                        "" =&gt; "mdsyn3w42a"
</span><span class='line'>  type:                               "" =&gt; "AWS"
</span><span class='line'>  uri:                                "" =&gt; "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:123456789012:function:eb_ip/invocations"
</span><span class='line'>aws_api_gateway_integration_response.ip_get_200: Creation complete
</span><span class='line'>aws_api_gateway_method_response.ip_400: Creation complete
</span><span class='line'>aws_api_gateway_integration_response.ip_get_400: Creating...
</span><span class='line'>  http_method:                         "" =&gt; "GET"
</span><span class='line'>  resource_id:                         "" =&gt; "sthj28"
</span><span class='line'>  response_templates.#:                "" =&gt; "1"
</span><span class='line'>  response_templates.application/json: "" =&gt; "$input.path('$').errorMessage"
</span><span class='line'>  rest_api_id:                         "" =&gt; "mdsyn3w42a"
</span><span class='line'>  selection_pattern:                   "" =&gt; "[^0-9](.|\n)*"
</span><span class='line'>  status_code:                         "" =&gt; "400"
</span><span class='line'>aws_api_gateway_integration.server_num_get: Creation complete
</span><span class='line'>aws_api_gateway_method_response.server_num_200: Creation complete
</span><span class='line'>aws_api_gateway_method_response.server_num_400: Creating...
</span><span class='line'>  http_method: "" =&gt; "GET"
</span><span class='line'>  resource_id: "" =&gt; "9w68fs"
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>  status_code: "" =&gt; "400"
</span><span class='line'>aws_api_gateway_method_response.server_num_400: Creation complete
</span><span class='line'>aws_api_gateway_integration_response.ip_get_400: Creation complete
</span><span class='line'>aws_api_gateway_integration_response.server_num_get_200: Creating...
</span><span class='line'>  http_method:                         "" =&gt; "GET"
</span><span class='line'>  resource_id:                         "" =&gt; "9w68fs"
</span><span class='line'>  response_templates.#:                "" =&gt; "1"
</span><span class='line'>  response_templates.application/json: "" =&gt; "$input.path('$')"
</span><span class='line'>  rest_api_id:                         "" =&gt; "mdsyn3w42a"
</span><span class='line'>  status_code:                         "" =&gt; "200"
</span><span class='line'>aws_api_gateway_integration_response.server_num_get_200: Creation complete
</span><span class='line'>aws_api_gateway_integration_response.server_num_get_400: Creating...
</span><span class='line'>  http_method:                         "" =&gt; "GET"
</span><span class='line'>  resource_id:                         "" =&gt; "9w68fs"
</span><span class='line'>  response_templates.#:                "" =&gt; "1"
</span><span class='line'>  response_templates.application/json: "" =&gt; "$input.path('$').errorMessage"
</span><span class='line'>  rest_api_id:                         "" =&gt; "mdsyn3w42a"
</span><span class='line'>  selection_pattern:                   "" =&gt; "[^0-9](.|\n)*"
</span><span class='line'>  status_code:                         "" =&gt; "400"
</span><span class='line'>aws_api_gateway_integration_response.server_num_get_400: Creation complete
</span><span class='line'>aws_api_gateway_deployment.eb_deployment: Creating...
</span><span class='line'>  rest_api_id: "" =&gt; "mdsyn3w42a"
</span><span class='line'>  stage_name:  "" =&gt; "prod"
</span><span class='line'>aws_api_gateway_deployment.eb_deployment: Creation complete
</span><span class='line'>
</span><span class='line'>Apply complete! Resources: 18 added, 0 changed, 0 destroyed.
</span><span class='line'>
</span><span class='line'>The state of your infrastructure has been saved to the path
</span><span class='line'>below. This state is required to modify and destroy your
</span><span class='line'>infrastructure, so keep it safe. To inspect the complete state
</span><span class='line'>use the `terraform show` command.
</span><span class='line'>
</span><span class='line'>State path: terraform.tfstate</span></code></pre></td></tr></table></div></figure>


<p>できた！</p>

<h3>考察</h3>

<ul>
<li>依存関係</li>
</ul>


<p>リソースを作成するのに並列処理が出来なかったり、依存関係がまだうまく対応できてないので、<code>depends_on</code>を駆使する必要があるのが若干まだ面倒。ない場合は、<code>BadRequestException: Unable to complete operation due to concurrent modification. Please try again later</code>や<code>BadRequestException: No integration defined for method status code: 400</code>等のエラーが発生する。</p>

<ul>
<li>Integration/Method Response Headers</li>
</ul>


<p>CORS等の設定するする際には<code>Access-Control-Allow-Origin</code>等のヘッダーをMethodやIntegrationのResponse Headerに設定をする必要があるけど、<code>.</code>の扱い問題で未対応（<a href="https://github.com/hashicorp/terraform/issues/2143">#2143</a>）。それまではawscliで以下のようにすると事で回避。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aws apigateway update-integration-response --rest-api-id $rest_id --resource-id $appo_resource_id --http-method OPTIONS --status-code 200 --patch-operations op=add,path="/responseParameters/method.response.header.Access-Control-Allow-Headers",value="\"'Content-Type,X-Amz-Date,Authorization,X-Api-Key, Access-Control-Allow-Origin, x-amz-security-token'\""</span></code></pre></td></tr></table></div></figure>


<p>Issueはこの前上げたので（<a href="https://github.com/hashicorp/terraform/issues/6092">#6092</a>）、ウォッチしておくと良い。</p>

<ul>
<li>Infrastructure as Code</li>
</ul>


<p>API Gatewayは<code>resource</code>, <code>method</code>, <code>integration</code>, <code>method response</code>、<code>integration response</code>等を記述しないといけないので、どうしてもコードが多くになってしまう事からSwaggerでやった方が楽だったりするかも。ただ、その場合は<strong>Infrastructure as YAML</strong>になってしまうけど。。また、YAMLは整形してからimportする必要があったりするので、その辺は諸々トレードオフかなぁ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Terraformで特定のブランチを使う]]></title>
    <link href="http://ijin.github.io/blog/2016/03/31/using-terraform-dev-versions/"/>
    <updated>2016-03-31T16:38:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/03/31/using-terraform-dev-versions</id>
    <content type="html"><![CDATA[<p>HashiCorpの<a href="https://terraform.io/">Terraform</a>の開発は非常に活発であり日々進化していますが、リリースまでに待てない実装中や実験的な機能を使いたい場合は、自分で特定のブランチを変更・ビルドして使えます。</p>

<h3>リポジトリ取得</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ go get github.com/hashicorp/terraform
</span><span class='line'>$ cd $GOPATH/src/github.com/hashicorp/terraform
</span><span class='line'>$ git checkout new-aws-feature</span></code></pre></td></tr></table></div></figure>


<h3>commit hash付与</h3>

<p>どのコミットリビジョンを使っているか簡単に分かるように、versionにgitのcommit hashを指定。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sed -i -e "s/dev/dev - `git rev-parse --short HEAD`/" terraform/version.go</span></code></pre></td></tr></table></div></figure>


<h3>ビルド</h3>

<p>make devすると全pluginやproviderがコンパイルされ、非常に時間がかかる（特に最近は対応範囲の広がりが著しく、生成されるバイナリの総容量が増加傾向）。
よって、特定のproviderを指定して時間短縮する。以下はaws providerで作業している場合。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ make core-dev plugin-dev PLUGIN=provider-aws
</span><span class='line'>==&gt; Checking that code complies with gofmt requirements...
</span><span class='line'>/Users/ijin/golang/bin/stringer
</span><span class='line'>go generate $(go list ./... | grep -v /vendor/)
</span><span class='line'>go install github.com/hashicorp/terraform
</span><span class='line'>go install github.com/hashicorp/terraform/builtin/bins/provider-aws
</span><span class='line'>mv /Users/ijin/golang/bin/provider-aws /Users/ijin/golang/bin/terraform-provider-aws</span></code></pre></td></tr></table></div></figure>


<h3>確認</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ terraform version
</span><span class='line'>Terraform v0.6.15-dev - 123abcd</span></code></pre></td></tr></table></div></figure>


<p>Happy Terraforming!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LambdaでSSHやGitを使ってみよう]]></title>
    <link href="http://ijin.github.io/blog/2016/02/18/ssh-and-git-on-aws-lambda/"/>
    <updated>2016-02-18T12:35:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/02/18/ssh-and-git-on-aws-lambda</id>
    <content type="html"><![CDATA[<p>AWS Lambda上で<code>ssh</code>や<code>git</code>を使えたら便利！思ったけど、そもそもバイナリ自体が入ってない上にパッケージのインストールが出来ないので回避方法を悩んでいたところ、幸いそれぞれPython nativeの実装があったので先人の肩に乗っかる事で事無きを得ました。</p>

<h2>SSH</h2>

<p>SSHは<a href="http://www.paramiko.org">Paramiko</a>というライブラリを利用。s3上に<a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">SSE-KMS</a>で暗号化されたキーファイルをダウンロードし、それを使ってサーバと認証しログイン。</p>

<p>注意点</p>

<ul>
<li>Lambdaの実行環境にはデフォルトでParamikoが入ってないので、deployment packageに含める必要がある</li>
<li>Mac上ではpythonライブラリの互換性が衝突する為、Linux（EC2等）上でpackageを作成する必要がある</li>
<li>最近発表された<a href="https://aws.amazon.com/blogs/aws/new-access-resources-in-a-vpc-from-your-lambda-functions/">VPC対応</a>を使ってprivate networkで通信をしたい場合、外部への経路はそのままでは不可なので、s3の場合はVPC endpointを作成するかNATが必要になってくる。詳しくはこの<a href="http://qiita.com/ijin/items/94c0bc4b8f6f5e77a591">記事</a>を。</li>
</ul>


<div><script src='https://gist.github.com/26afca1e9b03ecaf4d8e.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<h2>Git</h2>

<p>Gitは<a href="https://github.com/jelmer/dulwich"><code>dulwich</code></a>というライブラリを利用。sshプロトコルの場合、デフォルトではシステム上のsshが利用されるのでPython版の<code>ParamikoSSHVendor</code>クラスを使えばすんなりいくと思いきや、キーファイル指定が出来なかったのでそこを少し改変。また、Lambda上での特殊な環境の為か<code>sys.stderr</code> のencode周りがうまく検出されなかったので、<code>dulwich.porcelain.push</code> methodも若干修正。</p>

<p>Paramikoを使っているので、上記同様パッケージ作成はLinux上で。</p>

<p>以下はprivate repositoryをclone後、別branchに新規ファイルを追加後にcommitし、githubへpushする例。</p>

<div><script src='https://gist.github.com/080822d2c7859b528631.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<p>それでは、良いLambdaライフを！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lambdaの容量を監視しよう]]></title>
    <link href="http://ijin.github.io/blog/2016/01/14/monitor-lambda-capacity/"/>
    <updated>2016-01-14T05:23:00+09:00</updated>
    <id>http://ijin.github.io/blog/2016/01/14/monitor-lambda-capacity</id>
    <content type="html"><![CDATA[<p><code>2016/1/14</code>現在、AWS Lambdaにはなんと<strong>リージョン</strong>毎！にアップロードできるパッケージの合計サイズがたったの<strong>1.5GB</strong>という<a href="http://docs.aws.amazon.com/lambda/latest/dg/limits.html#limits-list">悲しい制限</a>があります。特にlibraryを同包したり、versioningを使ったりしてCIをガンガン回してると、結構すぐこの上限に達してしまいがちです。そこで、Lambdaの総容量はAWSコンソール上には表示されるものの、トラッキングし辛いので監視する仕組みを作ってみました。</p>

<h2>仕組み</h2>

<p>LambdaのScheduled Eventsを使って、<code>ListFunctions</code>と<code>ListVersionsByFunction</code> APIを叩いて、個別functionの<code>CodeSize</code>をサマって、<code>PutMetricData</code>でCloudWatchに投げて、Alarm設定してるだけ。</p>

<script src="https://gist-it.appspot.com/https://github.com/ijin/check_lambda_capacity/blob/master/lambda_function.py"></script>


<p>(*) <code>2016/1/26</code> 追記：<a href="https://twitter.com/marcy_terui">@marcy_terui</a>さんからの<a href="https://twitter.com/marcy_terui/status/689326911634329600">ご指摘</a>でVersionsの容量計算が抜けてました。ありがとうございます。</p>

<p>といっても、今後別アカウントでいちいち設定（IAM role&amp;policy、Lambda、SNS、CloudWatch）するのも非常に面倒くさいので、今回は<a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/working-with-templates-cfn-designer.html">CloudFormation Designer</a>を使って、ほぼ一発で環境を再現できるようにしました。</p>

<h2>CloudFormation</h2>

<p>ボタン作ってみた。<a href="https://console.aws.amazon.com/cloudformation/home?region=ap-northeast-1#/stacks/new?stackName=check-lambda-capacity&templateURL=https://s3-ap-northeast-1.amazonaws.com/ijin/aws/lambda/check_lambda_capacity/check_lambda_capacity.template">
<img src="https://s3.amazonaws.com/cloudformation-examples/cloudformation-launch-stack.png">
</a></p>

<h3>Stack Creation</h3>

<p>Designerではこんな感じ。心なしか、jsonの苦痛が多少楽になったような。。後、Propertyの補完機能は良いけどショートカットが<code>Cmd+Space</code>なのでSpotlightさんがぁ。</p>

<p><img src="https://lh3.googleusercontent.com/CLHrqYHPDKPxABDkWdrl0FYbEEC9enKmbOaK75TqhqL5tPnQ8oRjA3_f3N3iJoD5cSanPbbvt9lT=w880-h586-no"></p>

<p>s3からtemplateを指定。
template urlは<code>https://s3-ap-northeast-1.amazonaws.com/ijin/aws/lambda/check_lambda_capacity/check_lambda_capacity.template</code></p>

<p><img src="https://lh3.googleusercontent.com/XeF-yQk1cxy8z8KnHTJS3mP-onExoYmbJ7-OYISmLd3NYxO4fVCQnqAxygAEu6zdMtzEy16641C-=w826-h268-no"></p>

<p>Parameterとしては以下が指定可能</p>

<ul>
<li>アラート閾値（Byte単位）</li>
<li>SNS topic（空の場合は、自動作成される）</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/vX0JiEE_me3Wn6__PbNysmSYVkGiOs4jbqivZm7lOoq18kZpyrV9lj01kL9-rDMCX1JAS7BHVmI4=w902-h509-no"></p>

<p>Stackを作成すると、諸々のリソースが数分で出来上がり。</p>

<p><img src="https://lh3.googleusercontent.com/rQy-Any2cmz9I7YxuGD-Pi8_4VB9dGKFnCbAxWHH4QPjRMF7Y9nKAi2sZPY2HogoL2vpcc8ABy4E=w1050-h260-no"></p>

<h3>Manual Labor</h3>

<p>本当は以上で終了！にしたいところですが、LambdaのScheduled Eventsの設定はAWSコンソールからのみしか出来ないという<del>情けない</del><a href="http://docs.aws.amazon.com/lambda/latest/dg/with-scheduled-events.html">残念な状態</a>（<code>2016/1/14</code>現在）なので、ここからポチポチ設定作業。。（API重視の開発姿勢はどこ行ったんだろう）</p>

<p>(*) <code>2016/1/26</code> 追記：この記事の翌日に発表された <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/WhatIsCloudWatchEvents.html"><code>CloudWatch Events</code></a> の <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ScheduledEvents.html"><code>scheduling</code> 機能</a> によって出来るようになりました。なんというタイミング。</p>

<p><img src="https://lh3.googleusercontent.com/2pedymzqDYHJ30u7VglVv-7_6IpFhpOnRdnE4-QxjuIdX1fep2FwtoyDNr1Kl5yEqT1rtjoLDLZx=w581-h238-no"></p>

<p><img src="https://lh3.googleusercontent.com/hcLpNX45gIQZQUQGvsyyIXfOH3s9yDpNLIZJN8TU-RUZDdMGdrsNXAb_NRupjWF9Hf4QrK4y6lXO=w864-h441-no"></p>

<p>最小頻度が5分毎
<img src="https://lh3.googleusercontent.com/lzuWtzvkK1A5pUSPyShVaFzzOQ13cD8PFVfCAz3rxSYkn5sKirWnhq-4PlKyhuesMlCQtrfH57yx=w862-h507-no"></p>

<h3>Graph</h3>

<p>これで、グラフが取れて閾値を超えたらアラートが飛ぶようになる</p>

<p><img src="https://lh3.googleusercontent.com/yzswstqCbaTzpkYfy5MlRS2I9ur5Is3hI8Eii-o27twq-fYA_6o8SY5Rrn0DbyZEn8UJarGhh_9L=w570-h270-no"></p>

<p><img src="https://lh3.googleusercontent.com/NE43x1KQW76QO7b4TMIjjcEYrpQ07B9SNOb-9L-wEnNKc8oC-69HpgzWiVABnQwBSNGtDz4ayeTR=w286-h221-no"></p>

<h2>Code</h2>

<p>出来上がったCloudFormation templateコードはこちら。<code>AWS::Lambda::Function</code>がlambdaのresource担当だけど、templateにfunctionをインラインで埋め込めるのは現時点では<a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html"><code>nodejs</code>のみ</a>なので仕方なくzipしたpythonコードをs3にアップして参照するようにしてる。</p>

<script src="https://gist-it.appspot.com/https://github.com/ijin/check_lambda_capacity/blob/master/check_lambda_capacity.template"></script>


<p>元気があれば、そのうちnode版も書こうかな。。</p>

<p>GitHubのリポジトリは<a href="https://github.com/ijin/check_lambda_capacity">こちらから</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[バリ島のHubudでコワークしてきた]]></title>
    <link href="http://ijin.github.io/blog/2015/12/18/co-working-in-hubud/"/>
    <updated>2015-12-18T10:33:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/12/18/co-working-in-hubud</id>
    <content type="html"><![CDATA[<p>東京で借りているマンションのエレベータが総入れ替えで1週間完全停止する事になったので、ふらっとインドネシアのバリ島に来てみました。
仕事柄リモートワークがしやすいで、ついでにバリ島のウブドというエリアにある噂のコワーキングスペース「<a href="http://www.hubud.org"><em>Hubud</em></a>」で作業してみることに。</p>

<h2>場所</h2>

<p>インドネシアのバリ島は日本からやや西にほぼ南下しただけなので、時差は1時間程度。</p>

<iframe src="https://www.google.com/maps/embed?pb=!1m28!1m12!1m3!1d31852094.710968062!2d109.02427855604289!3d12.959360661349752!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!4m13!3e4!4m5!1s0x605d1b87f02e57e7%3A0x2e01618b22571b89!2sTokyo%2C+Japan!3m2!1d35.6894875!2d139.6917064!4m5!1s0x2dd23d0d964ec3b7%3A0x4030bfbca7d2d30!2sUbud%2C+Gianyar%2C+Bali%2C+Indonesia!3m2!1d-8.5078075!2d115.2643794!5e0!3m2!1sen!2sjp!4v1450422572014" width="600" height="450" frameborder="0" style="border:0" allowfullscreen></iframe>


<br />


<p>山岳エリアにあるウブドという地域。</p>

<iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d898423.1663660748!2d115.13694999999998!3d-8.4778!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x2dd23d0d964ec3b7%3A0x4030bfbca7d2d30!2sUbud%2C+Gianyar%2C+Bali%2C+Indonesia!5e1!3m2!1sen!2sjp!4v1450421799812" width="600" height="450" frameborder="0" style="border:0" allowfullscreen></iframe>


<br />


<br />


<p>そこにある<a href="https://en.wikipedia.org/wiki/Ubud_Monkey_Forest"><strong>Monkey Forest</strong></a>というジャングルの近く。猿がそこら中に。</p>

<p><img src="https://lh3.googleusercontent.com/-L5ndSsoluTDH-7Zt2rhHSascEPf5IH6EKXWXGvC04lqMfYxVngPZYbE1I3k1R23ccnPWcS0WOVD3vAHqE_jGBdVqnO4Aw0Hl1765UWbeRKKTfPu_6_lk0iJF5u9TkbuIpnxhB2DhJpqlXZUStBSK1UzfBsAvST8owOpUu2D7m157ZWauzH_PwDPu3d2nWzReiLG4fO30_iJxY26I3bSzm3Z1dQrCMVm4Kks7deGJ1GqGi3gsW4QD7L-uRA-4_G2RmI2yThUJxbiEVob4tNqrGcVe8UpnR7NzXtp7eGBz9Zucb2vKB33VJi8Z26A6St3F9Tl8W8IUaqaUv0VVNTT6SHzronazA0FGgFKlb2_-Lp16ZIjqWfoOWMmHSm87avAUUOEqCro7zfSoPatAaByPG7cZELHm9mElVd-zziMmDPB-oXU61fypbP-r7N9gdqFRu4_ZMu7FSIjKGzji6o6jGKoqqYU8tt9neZANW7fH0vkn1S9Y8M2KJVbOInaeKSlbqIbnPJaDuq8WrTOjH09pMA69-QhIvEx9rlHaQ3IzMrXxKQuh2LzXK_8cGF8ZjfZFuyy=w911-h683-no"></p>

<h2>Hubud</h2>

<p><em>HUB in UBUD</em>なので<strong>Hubud</strong>という名称。</p>

<p><img src="https://lh3.googleusercontent.com/dYMqwsLYp2oaJKEASxAYUMMLo1C5ZpduSKFWKpRORREs69OUh_RV5igYhGucTrY6oWhJwnzH_yHy87UDtAU89E4bAnDorn3HAIAKQzy4s2Crd2nzku3nXdu00oqK7s52DzlCMJxJ6-rUzoHtC2HHAqLWfkf9QOpq_mHYFpQNLAE1DB4076mhLSV_1ACx29J-cgaBLaJxW_UNWmhQnFtCCW8WKRdSTQcyEOfbELt3WsdTRE5fPMex6ko0ZaAZxzKH4gLWPDM3QBs-oTMchZc2ZzUGK-atDRVvDckprQcnUzbv73zzFPmik1nf8vfuETzAAF5aKSjz1uyHwSjHUah2_jWTbATGA2pMeRRKd44M42e1zeshxCY1LhtLU76pt6bhy_hkTs6x93YNRAQahkr28D0l5cmuIbcZjFa0egVBrT_OaN6zM0RjU35JMCQoqNzukh9NhzrT-CGNVFdgQabjP7lxdvBeTBlZJ5xHneuN2CmrJWvOZL4nA42koIbmLD3Os4F5y-mkp4oVGbHgd5Qg8eyeyCqBQiw-VIc9jT1cyo3bQEXUh1cnOcbx-CNV7b-7sAcl=w513-h683-no"></p>

<p>$60〜の月額プランを支払う事によって、館内で使える時間数が決まる。平日は24時間アクセス可能で、土日は22時ぐらいに閉店。（2015年12月現在）</p>

<p>今回は$60(+$3の処理手数料)を事前でPaypalで払って、25時間プランに加入。</p>

<p>ちなみに、bitcoinでも支払い可能。</p>

<p>中にはbitcoin自販機も！</p>

<p><img src="https://lh3.googleusercontent.com/UY-A9g8-ONJU8Aay5xcWsLRg83oCVKqlbiUtxmBHOGbxHNBzhxu6hb-rRIQCjP-sPkQi0xes-5-1mO9aNb4R_pi07Eu73KxhscSPcuXQKdp7w1lmzHvLAjscGqGh2Pu6UdTTfv1G7esdfdetrCgHTg_uX5GscCuYhP4iE8WMDLrkLcgCfPBHL2lK3xGU4aJWaJnhM1T-OWC4yzoWp3EsB3USh-_R-M961n96fVlcY9V8vQVSonOvG0-NHsZc544cPy9Y9eh1EyRqjfpsV_nQdYOFh9EXQhpowReXYCccMMZvYKspBdZE_2AtENbmF9p_NYEYbeLHWM9YjFH5YofX-SGGWtSJTrqL_ZSS2W0-0qG_FqlE-LWpL9CkvssOYDWrLe0NlRFig_VjcDDKldpECGdhs03DyfR0ApbtH4Jczs-Cwjc9t0qi3beY03w1uSm1xP1wsUq0KishQOgkFSdQhr9yW8sQ-mtwv9N3Ds6pt0XqN_omSw-grmomU1o6MAO1x7-DpljNq7-E1_SNc485gmy412hXH0tDoAO8Os6Fbn6OlBoIRf5UCCKlM-nIJ2owx4Hn=w513-h683-no"></p>

<p>館内には24時間いつでも入れるので時間のトラッキングはどうなってるかというと、恐らく登録時にノートのwifiを設定したので、そのmac addressで識別していると推定。</p>

<h2>内装</h2>

<p>リラックスした感じでアットホームな雰囲気。</p>

<p><img src="https://lh3.googleusercontent.com/uBAu7HirXeAKsONRaXh_vqc2mP5SmPpqF4oXoDkD61YPsNl1V5OPpASxWTeEWzu_gHNGli4RjRItoL7PVDYYfMS8WY8_uZFvnB76sMJzQK11n5Gsux2y6aLODXrcNv2ClbxKODcjaqa4-JMLT8WXUjD9Ve65s1D9THyduaHxit4hUOOhFrk2QDsYVjGJLKOkfw5YaoFoASiQhJGZihfrL56cN1ssC0SIGr0DN58nc_1GXQDfEE-QlOrf65dECO3gKB6dv7HkvEXdzdzZww0AWIsOWOR6x3Karyy0eopYWY1rg96dMZZbDSuuQ1whEDtxb4PpY5wlBbwYHbzGC0tzaTmekorQm6bm_W3bP0sArMLAJb315Kiwz2XXT3BIAbKox9w6cAi4kBg-hd2DSJa5qEweMwzuF4D-74-eTkbmEPSsipuOt-TwXnlDnwtWAGtU77eIX0I6xOifAGNACZhFRlyfowqXjTDsFm_PIzzu2wmNp6PX1RcDeZPjouXxqBKQNNl3m7jwXmayotOOetKLO04cEzYr05hesUlRfEr0fqVhJQGZw639XFH6ms8HiOhvVKhe=w911-h683-no">
<img src="https://lh3.googleusercontent.com/cvPM3ADw9vgnS-5GEGdeQ49mkmhcueUmMJb4wdEnmjIGRFOBP9SsFRSWKKozqgCg4KUleMXh9kLngoGugIKjhoat6rryv2eg6A09gsdfLSYLWVIanZCbxSkbtsulchAa8kijRz8DcIYlls-ZfC4LgkBQwKlmKeKvEMNmgpRzp7ui4glA64_7xiaj_y9JY2HSqCH3TFTaDHjz7-Xal1lvFnEqSk3YMjErUTU3azihb7GIjuIL30z37LmGRgWd4EJoTSd7kykPhn9WlFRvCwD0AmmJ_YYCVPkqQSiax1ZZdWjfOntAupSW7x6SYIod8Wc3y_v17gGZ0hORkuq8s47fj0dDuHcSWWq7brvV88hTBYQRYNTkCZtGTd62rtG_TQzdUaXLB1egThUQhrvYDhD1YUr9iQA0hcFrhi4ql-XSuX_8Yf0hgZkEIyTES6-VrAVB9gCxcXsQzqh6bzQ3PXZ9z3K_eiZNDyugRxtO1b8no7w9vAlsk-lmbv0Xqqkgdv9d9YOGxISt8n72ISlKLMSZFIo2nLT_Xm8MEpA88t8kmWzAhVK0WwSkzWeuPc9Oax39E-QI=w911-h683-no"></p>

<p>フリーデスクで館内でも中庭でも作業可能。</p>

<p><img src="https://lh3.googleusercontent.com/LZSKtZi9Ze5mayvKLZP0dCvSVq37O3TDZmqJYqvBKHj8Qmc6MgExfm1dSTyKvt3iQkLujEF3EjjYbFsSyTovk3bPWzwYuv0a85Y5nEsP5Prfz-UMm9rXKSd4fVeANMD_9j-e9n24_FehztmLv4Lt83Rx0qXhBSg2QwTGG2udhmRDrMChJFYxt2Qt7kzp6ueGuZXnzJGJRwxub2706QCYyUxdMgvdVp01QtrgxbufZ4XOykfwxVZXi1thiPyAWYLeW3AiqOCZ0TYZPRL2RjfajXZWOs72KYHLyGMjgS-2LNeNE3Mt7vMHFNTlhyh84Occi2I7MUl4gWHR4vkv-DB81093Hpnamzn3m2tRPvwRM64_bQFydreyIGGsbTMwyvVbVPIRQ_k2z3n8mVbwZYAj-zI6RIBs9PM9qYp1hAcU7aHtr7fI1vCjVadPUycH5Eg4McHbSn725NhV6aZdj-83cR6hhg_xL3c1WOFIu338CZfqFr5HSlFmQXXQTrQ19qEuNZjN47oN5urQ4f_PcczBl7rBABzPnTikmBM7cjDZt-yqWdtmrxQIU85wI-h6-9v6dbl3=w911-h683-no"></p>

<p>お気に入りの作業場所。但し、夜になると蚊が出てくるので蚊よけスプレー必須。</p>

<p><img src="https://lh3.googleusercontent.com/x6INaXg6Khuoa-GmfkLAeeQz8Pl3iu-ePtf1gLTRPTYa2RnKrgWb8INtPiUCYbM4KGJOKxQLFjSngvx3cHuT-oRPqcrmZhTzzDb1GnR1Mn1GjQtyOA1QIOguqoFDfLwZGYG3BfHffvSfynYwjIkv2h8JEVXDwWKru8gKLF4oOYEGaCnS06Eb0ZcemsmiURZ0M3ypq8iUxaGtbTp9y54HPvyGFxiIOh6KCxu7AZKzwERk39AznqWpzYzjUCov-OS9N5hETGKHcich7fdF5wEbp4beo_YXBhoPFke1QEk3FlR4nbJ2Y3HnhJ8fWeb5T0XBI0wgy53z2tOsz0f08KcDrkVoCtajjP9rYU--YE_7v-LjZr2fdn9cM-PlqZGP4MToM5SyCTVWZFBDBn3xgzm5hLEaRvUI_ksi-Q-XZbbxLq62mLzAz10nNnWxwh4MVVGXd979cpQH5ASHIJgf1QKi0RHRSiVxj1tJBsA-VB5NOSXd9oarWFdSBjhnCPppErAEcffh_6i09mIZzMI1xOT-1zdHyzbPNTYLYMuucg-gPIkKchlsJByb4b68ic4V48hcEltf=w513-h683-no"></p>

<p>2階にはゆったりソファも。</p>

<p><img src="https://lh3.googleusercontent.com/iy0TIM5szRnddHzynP0Cy0bl1w4OttQOjQBKyocRnrsGh2ZJ7p4pNFZvxKUKcFPBvDEr7x5YkEul-bOmLTsiq2nlcFFC9UWG0LpBi-UFU-AW7798Ojy6qGTgk9nWcNe6i6KYVsDgAYUTF-V7aQ02yJvM6aHCXsle9GnVQinHU43zu5vnq7zxj_koCFRPlmINhgnHA_qXQSX3XPOvNjEoVg1q8uEESPSXgSl6U0df10i2m2jhnhMT3Y6uILLR27yYwL4dYfYB0FCgk6sbmiaQzN778jDKeoqClbwwV3HZzi0P7hdH1nWqSJfZM0OB52H_60BLUEjFo97Fvmz9lRUbbEtVMprMxo3-8zeDFe_HpPoS5IcRqILbS1xzFoKAlW_vxTJNUTWf0Jbji3l5_8Q__lbRgy-6NNlMsJbi3T4V2qlcxuI3Atz8B3w1siXL-pE9F3t2iDhsvCCsYlcMe5TrkjQnxkz8wk_D9GQ0YM_cRqZkXTojo92meWoP2GH-CgmNFJAlVM2bLxTwy5Zy1bBBSMsiMKRaqJmVS3VFUNGyzKKlU4Y0w7uJRfYZS_AErU2q0k0k=w911-h683-no"></p>

<p>free coffee!</p>

<p><img src="https://lh3.googleusercontent.com/Gh-1OBMPuUNcsvXjOdGC8b8f6UDMl1RgC8ta0klYmbW5Zk1ZEm0Z6bMqLpP4VBeNtl9vKm5Aj1mM1ZEbx8OdGyBYH73bchI6G9WC-so306HS5mjUjMOQ8X67S8gamvQjD0koEkqDrJyM8z7lf5C8HfCGEz30nr9sAml0QeBsl5DpqUIWwN-dyitMUKuAV4xtqUjxA2VrK0l-KFAUrlBpAxckudnZgWx7eN3xPCYKq-sS2xPUpkVfkiEZld9Ddp9lpmflbRmlIDHjGHmhKwEDIUdPKOzVODwOdNzbY1GzXPT2lp66Wl22WeyxZXImrHp20qvdNoQfkxRvfovODQKUcT9m5bikx3dBKP79bEKVzrtqznwKETztuPA9worTqdfiyYChEBQAa8Q5Gy7zGsXbJGP4_h175YbYJ5gCMC0Y0ENISX9W4Ru39J5pdzpivHBz_UUnFi42nyfbq6-NwIcI89QVXWVM2hwAl64wJ-zsIHwDHkmhSEXAZW8rlpMaKZAcINyJwV2IRhok-caBU8ShFfirsaty9a9QKuSZnFLjfzYxGzRMRjLC2mLoAw9SM1UBS1If=w911-h683-no"></p>

<h2>通信環境</h2>

<p>宿のwifiや現地のキャリアで買えるSIMカードによる通信品質はそれほど良くなく、時間と場所によってはパケットロスが大量に発生。</p>

<p>しかし、Hubudに引いている回線は帯域が太く、レイテンシーもほとんど感じられずに超快適！ストレスなく通信ができるので日本にいるのとさほど変わらないぐらいの感触。</p>

<p><a href="http://beta.speedtest.net/result/4916884889"><img src="https://lh3.googleusercontent.com/6pStRidXB-O6EdgUvp2hZiRfE6_t25MFrknT_smmfYx3r6ZgN5qqgdRnnwOPTkOcIi9K93tRsOcWS16Mg08WHam3XrfNIaIJywfYcfYzcnCCePI5egFyK2s47GxtXGwjdrrapIy9XBVY6Q0xxlOsWp_N9cQ-tYjjG7ZhSF4J9EtThcV5Di869jrkp4aMlxAsr4SFGT8XikG-oGRYd6Brv9sIgstHrtLOQs-2wrO8rUj6SOpkXwt8umkiabt3mZAWvxB1hxTgcKjPmu0LSxp7-XF0ajNNb_PrVjSUUoEtAfb9XEPQBQ2Hk7Ea9hJeYV3FAUn04MHoFMOw1_9Fd9KuNAF63L28w4x2hR_1S-ISH-GJbdOz7lpvDAE5tg4jkS6QYCsQ5gT7w2qtp8Ro4joofGHu_M6epy-lblzV-ifEF08KpVb3WPe_3Zb9G_kONq1Ai4B5rQFkvB8-APc4uVZSfdkwGEiUNHReMx3LhaYd7agAyjeRcgxKd8p0h05XNEBwyYLjXQBSOD3ULPk6n7j7QBlUiPGSusSs86W9u8SPFnDFOTyRJ7g2SD0v8F-I6-oY9-Iu=w421-h453-no"/></a></p>

<h2>まとめ</h2>

<p>たまには作業場所を替えて仕事して見るのも一興です。異なる環境に身を置くことによって、いつもとは違った感じの集中力が発揮でき、短時間で没頭してproductivityが向上する場面がいくつかありました。（昼間の熱い時間はプールに入って涼んで、夕方から夜まで作業するスタイルが結構効率的でした）また、いろんな国やバックグラウンドの人がいるので会話してみると良い刺激にもなるので是非一度体験してみてはいかがでしょうか。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LambdaのログをSlackで見よう]]></title>
    <link href="http://ijin.github.io/blog/2015/12/10/post-lambda-logs-to-slack/"/>
    <updated>2015-12-10T00:56:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/12/10/post-lambda-logs-to-slack</id>
    <content type="html"><![CDATA[<p><a href="http://qiita.com/advent-calendar/2015/lambda">今年もやるよ！AWS Lambda縛り Advent Calendar 2015</a>の10日分です。</p>

<h2>背景</h2>

<p>AWS Lambdaで開発してるとちょこちょこ実行ログを見たりします。cliであれば、<a href="https://twitter.com/sgwr_dts">@sgwr_dts</a>さんの<a href="https://github.com/winebarrel/lambchop">lambchop</a>が<code>tail</code>的に使えて素敵なんだけど、後で見返したり、検索したりするので、最近ではログをSlackに通知するようにしているのでその紹介を。</p>

<p>イメージはこんな感じ。</p>

<p><img src="https://lh3.googleusercontent.com/A1fsUgw4m52Db4UeOqR3xaQHIGF940MsbA1tchFkF8Pul-ixO6E=w563-h445-no"></p>

<p>ログはCloudWatch logsに溜まるのでsubscriptionさえ出来れば、別にソースはLambdaじゃなくても良いんですけどね。</p>

<h2>Lambda</h2>

<div><script src='https://gist.github.com/917193e443ff41cdf98b.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<p>CloudWatch logsのイベントをparseして、日付の色付けやタイムゾーン変換等ちょっこっと加工してメッセージと共に指定の<code>#channel</code>に飛ばすようにし、別のSlack通知用lambda functionをinvokeしているだけですね。
（Slack用のlambdaは<a href="http://ijin.github.io/blog/2015/08/06/github-to-lambda-to-slack/">以前のエントリ</a>を参照）</p>

<p>何故Slackの部分を別functionにしてるかというと、最小単位の機能の切り出しによる<strong>portability</strong>とcross-account間のinvokeが可能となる<strong>reusability</strong>からです。</p>

<h2>紐付け</h2>

<h3>cloudwatch logsにlambda呼び出しの権限設定</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aws --region ap-northeast-1 lambda add-permission --function-name "cloudwatch_logs" \
</span><span class='line'>  --statement-id "logs-my_lambda" --principal "logs.ap-northeast-1.amazonaws.com" \
</span><span class='line'>  --action "lambda:InvokeFunction" --source-account "123456789012" --source-arn \
</span><span class='line'>  "arn:aws:logs:ap-northeast-1:123456789012:log-group:/aws/lambda/my_lambda:*"</span></code></pre></td></tr></table></div></figure>


<h3>subscription filterの作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aws --region ap-northeast-1 logs put-subscription-filter \
</span><span class='line'>  --log-group-name "/aws/lambda/my_lambda" --filter-name logs-my_lambda \
</span><span class='line'>  --filter-pattern ""
</span><span class='line'>  --destination-arn arn:aws:lambda:ap-northeast-1:123456789012:function:cloudwatch_logs`</span></code></pre></td></tr></table></div></figure>


<h2>実行</h2>

<p>これでlambda functionが実行されると、Slackにログが通知されます。</p>

<p><img src="https://lh3.googleusercontent.com/-PgkSA7jGbVTf3w1Eq5CZuvUAN4_bkKpR811Vcij5MlLam22C10=w706-h396-no">
<img src="https://lh3.googleusercontent.com/JKU31Qsd6cOSWe011m8UJaBYljDrXwz08ym0ff79DngGMxDL_y0=w705-h234-no"></p>

<p>うん、見やすい。</p>

<h2>問題点</h2>

<p>これでログが飛ぶようになったのは良いですが、Lambdaが実行されてからSlackへの通知まで10数秒とやや長めの時間がかかってしまうのが現在の難点です。（Immediate Feedbackはないものの履歴や検索用途には十分だけど）</p>

<p>調べてみるとLambdaからCloudWatch logsへの書き出しが一番時間がかかっているのが判明。Logsへ書き出されたら、そこからの処理時間は1〜2秒とちょっと前に<a href="https://aws.amazon.com/about-aws/whats-new/2015/09/near-real-time-processing-of-amazon-cloudwatch-logs-with-aws-lambda/">発表された</a>CloudWatch logsの<em>near realtime processing</em>の通りなので、早く<code>Lambda -&gt; CloudWatch logs</code>も同じような処理時間を実現して欲しいものです。</p>

<p>まあ、別にCloudWatch logsにさえ入れば早いので、lambda logに限らずいろいろ応用できそうですが。</p>

<p>では、Happy Lambda Life!</p>

<p>参考</p>

<ul>
<li><a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/Subscriptions.html#LambdaFunctionExample">http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/Subscriptions.html#LambdaFunctionExample</a></li>
<li><a href="http://inokara.hateblo.jp/entry/2015/10/18/201212">http://inokara.hateblo.jp/entry/2015/10/18/201212</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elastic Beanstalkへの簡単ssh]]></title>
    <link href="http://ijin.github.io/blog/2015/11/04/elastic-beanstalk-easy-ssh/"/>
    <updated>2015-11-04T08:43:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/11/04/elastic-beanstalk-easy-ssh</id>
    <content type="html"><![CDATA[<p>AWS Elastic Beanstalk上で管理されているinstanceにsshするには<code>eb ssh</code>コマンドを使えば割りと簡単に接続できますが、アクセスキーの設定が必要で、開発者が多い場合にそれを発行してばら撒いて管理するのはかなり面倒です（IAM user/roleの割当にしても）。特に極稀にしか接続する必要がない場合。</p>

<p>そこで、API GatewayとLambdaでinstanceのpublic ipを返却するエンドポイントを作り、SSH configを設定すれば誰でもアクセスできるようにしてみました。</p>

<p><img src="https://lh3.googleusercontent.com/vqW8J9ASHnvZSjAZnwS-_4BMxUo37m6FJ3snn1c2j1dgbX1SVybDaz9TN0mG-fVLqKRUGDtUBO4uDbL2L_QILPXYNbKFCaCmG5Au4Ar8mNacZATEX3FjT2L08T-K4-JWwIXRvsd5SM1iwPu6az7ABb28N2ezTM5wp4-B4rB7tIHFzx8ZWCq9EvZQJGFnqVZpZxXEbdGc2edk6J4dd-QgrZRAmzx2XHXSK4oWnWCkbTB1VS-LGIk0ShMbqn1wjj8AugSoHozG1hsufsuEyeNxBN8-6lQowH_O8JWRdJc28ffNtEaQeGr6Xrj66DjjxYZmO_NdS9hnlgFzUAP4t9iWt1cRAVzDHHVXfqeROmtdXc1ogYLwQY3EOMpd42l-YDNzKbp_bi4H4YJ-Mr-pmF91szERTw2avQmc2MGYcUcsOATYxnyz47mNW1f6alfbzeUf1sFwlUZ1FqS3if6CWiaKnqNjRPvHHs8ccV7magouBQ0Qm3_DOgSKsuosLYXZzNYEuPZl1WYv-m2Hnz0pMglMUA42V_7zrl6lY-cleeY=w605-h431-no"></p>

<h2>前提条件</h2>

<ul>
<li>instanceにはログインユーザーのssh keyが登録積み（.ebextensions等で）</li>
<li>ssh localhost可能である</li>
<li>Elastic Beanstalkのenvironment名は数値で終わらない</li>
<li>Auto ScalingのTermination Policyが<code>NewestInstance</code></li>
</ul>


<h2>Lambda</h2>

<p>やってる事は単純で自動的に付与される<code>elasticbeanstalk:environment-name</code>タグのついたinstanceのipを（パラメータに応じて）返却するだけ。複数ある場合は、起動した順で。</p>

<p>せっかくなので新しくサポートされたPythonで記述。</p>

<div><script src='https://gist.github.com/bf735efbec42e1f96d4b.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<p>当然、LambdaのIAM roleで<code>ec2:Describe*</code>のAction許可も必要。</p>

<h2>Swagger</h2>

<p>API Gatewayのresourceをコンソールでポチポチ作るのがイヤだったのでAPIの状態を<a href="http://swagger.io/">Swagger</a>で定義してみた。awscliは<a href="http://dev.classmethod.jp/cloud/aws/getting-started-with-api-gateway-lambda-integration/">生REST APIが辛い</a>。</p>

<p>編集しながらドキュメントも見れる<a href="http://editor.swagger.io/#/">online editor</a>が結構便利。</p>

<div><script src='https://gist.github.com/a41059039937ffc8dada.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<h2>API Gateway</h2>

<p>Swagger上でYAMLで作成した定義書はjsonとしてexportし、<a href="https://github.com/awslabs/aws-apigateway-importer">aws-apigateway-importer</a>でAPIのresourceやmethodやらを生成する。</p>

<h3>import処理</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./aws-api-import.sh -c swagger.json
</span><span class='line'>2015-11-04 02:23:18,507 INFO - Attempting to create API from Swagger definition. Swagger file: swagger.json
</span><span class='line'>reading from swagger.json
</span><span class='line'>2015-11-04 02:23:18,649 INFO - Parsed Swagger with 2 paths
</span><span class='line'>2015-11-04 02:23:18,655 INFO - Creating API with name EB API
</span><span class='line'>2015-11-04 02:23:19,417 INFO - Removing default model Error
</span><span class='line'>2015-11-04 02:23:19,634 INFO - Removing default model Empty
</span><span class='line'>2015-11-04 02:23:19,872 INFO - Creating model for api id nx3r6d6yhh with name IP
</span><span class='line'>2015-11-04 02:23:20,114 INFO - Generated json-schema for model IP: {"type":"object","properties":{"ip":{"type":"string","description":"IP address."}},"definitions":{}}
</span><span class='line'>2015-11-04 02:23:20,329 INFO - Creating model for api id nx3r6d6yhh with name Error
</span><span class='line'>2015-11-04 02:23:20,338 INFO - Generated json-schema for model Error: {"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"fields":{"type":"string"}},"definitions":{}}
</span><span class='line'>2015-11-04 02:23:20,770 INFO - Creating resource 'eb' on bd5pqsq37h
</span><span class='line'>2015-11-04 02:23:21,420 INFO - Creating resource '{env_name}' on 8rjsbt
</span><span class='line'>2015-11-04 02:23:22,079 INFO - Creating resource 'ip' on 4cg26s
</span><span class='line'>2015-11-04 02:23:22,931 INFO - Creating method response for api nx3r6d6yhh and method GET and status 200
</span><span class='line'>2015-11-04 02:23:23,144 INFO - Creating new model referenced from response: IPaddresses
</span><span class='line'>2015-11-04 02:23:23,144 INFO - Creating model for api id nx3r6d6yhh with name IPaddresses
</span><span class='line'>2015-11-04 02:23:23,153 INFO - Generated json-schema for model IPaddresses: {"type":"string","definitions":{}}
</span><span class='line'>2015-11-04 02:23:23,770 WARN - Default response not supported, skipping
</span><span class='line'>2015-11-04 02:23:23,772 INFO - Creating method parameter for api nx3r6d6yhh and method GET with name method.request.path.env_name
</span><span class='line'>2015-11-04 02:23:23,998 INFO - Creating method for api id nx3r6d6yhh and resource id md6qcm with method get
</span><span class='line'>2015-11-04 02:23:24,822 INFO - Creating resource '{server_num}' on qmd6mc
</span><span class='line'>2015-11-04 02:23:25,689 INFO - Creating method response for api nx3r6d6yhh and method GET and status 200
</span><span class='line'>2015-11-04 02:23:25,896 INFO - Found reference to existing model IPaddresses
</span><span class='line'>2015-11-04 02:23:26,306 WARN - Default response not supported, skipping
</span><span class='line'>2015-11-04 02:23:26,306 INFO - Creating method parameter for api nx3r6d6yhh and method GET with name method.request.path.env_name
</span><span class='line'>2015-11-04 02:23:26,525 INFO - Creating method parameter for api nx3r6d6yhh and method GET with name method.request.path.server_number
</span><span class='line'>2015-11-04 02:23:26,764 INFO - Creating method for api id nx3r6d6yhh and resource id 5udxeo with method get</span></code></pre></td></tr></table></div></figure>


<p>これでAPI Gateway上に階層が出来上がり。</p>

<p><img src="https://lh3.googleusercontent.com/cM7s04iaMWI73VwJcH3C9lsnFjrrFpw0qqnUCM4hkmKWZiB3Pp0idjace8rxQYPCVwYzpucRKJep1j3CN9rDQ4uG0xJa4iXM_ua_lLo6LjxCus_lXV9aPCanWS17Ab6eVfgzH3wMDS1YvUhBq_6aLl3JmGmQVlZPFAUrOjcT-Xwra2o4VRKgaTbE5LQCvoBkzkylYhe6JECBu-lqBW0T9CnyhEsbJ1KTUwnIvLLTYtvTPtG6xEqoBMiCo26QLrASGg_k5fXW66jB-SH3fK-W-2TlYHwGdvlJunbuJp__AN2RUAhU64IPTQmZS-PfBTknMF273wF0DyqoL4UsS4HCmAMytc4LBx4s3iJdxFlPkMHPQ5eM9Q6REK92yP1a9FUqXKGF15FD9M6njOGvXFQYH8BsDruCa-HvxY7l6J0oj7PjyWwgq3_Jpd13F27rQkAcK13ni-sSB17wTRi-la8Tgu5ZMvnpUYBK-ARup3vHz791VQW-LVcdecok2Sao2wG4sUiUi5pMSOUabX02OMORVCu5OSxCdw-GxGSzikM=w350-h280-no"></p>

<p>後は各<code>GET method</code>でLambdaへの関連付けをし、<code>Integration Request</code>と<code>Integration Response</code>の<code>mapping template</code>でパラメータやレスポンスを設定。（多分、この手順もswaggerで定義できるとは思うけど）</p>

<h3>integration request</h3>

<p><img src="https://lh3.googleusercontent.com/JtD50KDCwP5ggylHzSuD7WiM-fr1QvVkZFpGFKD0efPbe_wvJPR0HbaTihe8wSlBNJzFYHAAwN9ZvKS1-R1WVGqbWT-t5PCdlptIVgJkk8xjDF0HJTRXeFEjF6F5Z2sp5wfY3BMgKZnyAM0CL6Ax5WtLNxCENl1SskcqajLDAapVQP8bj0UMlxUhsATwg9wh6zbS-jKp6tjf8YlkDD3PDFV_jhE2oVnzytNTlKBb5sU_kwMRFOGfQiUIpwgsrPq11af4ETcdFiU99lxa2ey1fgwxIaoEddLNOgMyObSd7LV0ISNY_kbZj0aRi2PFFmUfnQmYfc0UTajjAejDRms08vn6oy0-6kwGRjcKMq8zDSLFMCxgaSU4_2m2zh4T1zo54DJCHRm8ilXg_r3Z2u4IdBBHf4xYdvvs2J0p4ZT6GOQy6tMT0cNAFN5XUQiC6zDVutj2Ia1OQSlhUFRvnXwtivqGdMvpOIyUqoyuJ5RHLhO3hWP90SsW_DuILy6eXAHkSMHHpDPu5uemVBD29KfKsf67GS1bmJPwu5_9gX4=w836-h208-no"></p>

<h3>integration response</h3>

<p><img src="https://lh3.googleusercontent.com/-MuJyoH_nLN5jbjrcTsDW9qfsFUhDt6nHq_gNlYwMhVNZJqYL3C5qrgPwXLrPRXL0oRICG8xGpBVJpsLKIC3KhhFL4eHyo5LPZRVMbCXQ20UfT-tMV-Pt72-Rr7AKkhXDSzLcBANpRyJgioD5VlLb6YfqcnDLpczt1gnCOvnLHeWuuIf8NTa6q8hoGZXKyBo79Xapag_xvzbqco8AzSqu_yUxR6MXArEpp_we0JGhkJJHrve41LXNDX27QfC-Fj84feKgXY9CTgB1ytHWWDT_71gU05NwMdMisuQnAZPg9kRnoze55OBXu6c8TtzN5Idvdgmc9dbeKKxFG0f4bn_pt4lN6ZzOJ0ptOteVl-EpMDPk6M9_kwKerOc1GQbH47MEEYmQTXmoMeUp9ECJwhYdxdqu_LEB6ZxrjOC3VBPP6rE8sxBZJG8od_adtClp4UYU5-LBPm9_DYsde5hThh2su9PVBph8fbk42WE8I6o3BoOSciA1G9eIwfaa99OQh-4NZhJRVIGs7M4uMHVyUnDQk0RqtjFjf7TlCkeRC4=w811-h210-no"></p>

<p>参考：</p>

<ul>
<li><a href="http://qiita.com/yuyakato/items/89fcef9746afbf48977a">Amazon API GatewayでAWS Lambda関数にクエリ文字列をパラメータとして渡す</a></li>
<li><a href="http://qiita.com/ijin/items/6edafc1f351a9de49b54">Amazon API Gatewayで文字列をクォーテーションなしで返却する</a></li>
</ul>


<h3>endpoint</h3>

<p>Deployすれば、以下のAPIでipが取得可能。</p>

<p><code>/$API_ENDPOINT/prod/eb/$EB_ENV_NAME/ip/[n]</code></p>

<p>instance ip一覧</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -s https://altvsxa2kj.execute-api.ap-northeast-1.amazonaws.com/prod/eb/my-ebenv-production/ip
</span><span class='line'>54.189.149.5
</span><span class='line'>54.189.168.83</span></code></pre></td></tr></table></div></figure>


<p>特定のinstance ip</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -s https://altvsxa2kj.execute-api.ap-northeast-1.amazonaws.com/prod/eb/my-ebenv-production/ip/1
</span><span class='line'>54.189.149.5</span></code></pre></td></tr></table></div></figure>


<p>ipの部分だけ、PATHじゃなくquery paramterにした方がAPI Gatewayの設定がシンプルだったけど、少しでもRESTfulにしたかったもので。（まあ、そもそもjson返してないけど）</p>

<h2>SSH Config</h2>

<p>さて、ここからがキモです。</p>

<p>~/.ssh/config</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host my-ebenv-production*
</span><span class='line'>  User ec2-user
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  ProxyCommand ssh -A localhost -W `N=$(grep -o '[0-9]\+$' &lt;&lt;&lt; %h || echo 1); E=$(perl -pe 's/\d+$//' &lt;&lt;&lt; %h); curl -s https://altvsxa2kj.execute-api.ap-northeast-1.amazonaws.com/prod/eb/$E/ip/$N`:%p</span></code></pre></td></tr></table></div></figure>


<p>上記の設定で<code>ssh $EB_ENV_NAME[n]</code>で指定したサーバに接続できるようになります。</p>

<p>仕組みとしては、ホスト名をparseしAPI Gatewayに適切なリクエストを行い、返却されるpublic ipにローカル端末自身を踏み台としてsshする<code>ProxyCommand</code>の設定です。</p>

<p>例えば、2番目（に起動した）のサーバに接続する場合は</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh my-ebenv-production2
</span><span class='line'>Last login: Wed Nov  4 01:19:14 2015 from ndx6-ppp413.tokyo.sannet.ne.jp
</span><span class='line'> _____ _           _   _      ____                       _        _ _
</span><span class='line'>| ____| | __ _ ___| |_(_) ___| __ )  ___  __ _ _ __  ___| |_ __ _| | | __
</span><span class='line'>|  _| | |/ _` / __| __| |/ __|  _ \ / _ \/ _` | '_ \/ __| __/ _` | | |/ /
</span><span class='line'>| |___| | (_| \__ \ |_| | (__| |_) |  __/ (_| | | | \__ \ || (_| | |   &lt;
</span><span class='line'>|_____|_|\__,_|___/\__|_|\___|____/ \___|\__,_|_| |_|___/\__\__,_|_|_|\_\
</span><span class='line'>                                       Amazon Linux AMI
</span><span class='line'>
</span><span class='line'>This EC2 instance is managed by AWS Elastic Beanstalk. Changes made via SSH 
</span><span class='line'>WILL BE LOST if the instance is replaced by auto-scaling. For more information 
</span><span class='line'>on customizing your Elastic Beanstalk environment, see our documentation here: 
</span><span class='line'>http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customize-containers-ec2.html</span></code></pre></td></tr></table></div></figure>


<p>1番目の場合は明示的に指定する必要はありません。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh my-ebenv-production</span></code></pre></td></tr></table></div></figure>


<p>また、Auto Scalingでinstanceが増減せずに1台のみの場合はもっとシンプルに記述できます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  ProxyCommand ssh -A localhost -W `curl -s https://altvsxa2kj.execute-api.ap-northeast-1.amazonaws.com/prod/eb/$E/ip`:%p</span></code></pre></td></tr></table></div></figure>


<p>簡単！</p>

<p>でも、よくよく考えたら普通のAuto Scalingの場合でも利用できる事に気付きました。</p>

<h2>まとめ</h2>

<ul>
<li>Swaggerなかなか面白い</li>
<li>API GatewayとLambda便利</li>
<li>Lambda pythonも良い。けど、rubyサポートも早う。。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS re:Invent 2015に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/10/26/aws-re-invent-2015/"/>
    <updated>2015-10-26T02:26:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/10/26/aws-re-invent-2015</id>
    <content type="html"><![CDATA[<p>今年で3度目の参加となるAWS re:Invent。
忘れない内に記録を残しておきます。</p>

<h2>Day 0</h2>

<h3>Game Day</h3>

<p>Unicornを貸し出すサービスを展開する仮想のスタートアップ企業にDevOpsチームとして最近入社したという設定。前任者が退職しており、資料が少ない中でサービスオープンに立ち会いつつ、様々な困難に直面するというフルデイ・イベント。
今までのGame Dayと違って面白いのはパフォーマンス・チューニングをしつつも、コストも意識しながらチーム間でスコアを競争するところ。アプリは触れないので、<a href="http://isucon.net/">ISUCON</a>よりは昔やった<a href="http://ijin.github.io/blog/2012/07/03/tuningathon4/">チューニンガソン</a>に近い感じ。</p>

<p>スコアは累積の損益。アーキテクチャによっては利益が出たり損失が出たりする。例えば、多くのリクエストが処理できると利益は増すが、AWSのリソースが多いと費用が掛かって損失になりうる。
当然最初は各チームは赤字から始まり、時間とともに積算した利益によって黒転して行く様が目新しかった。</p>

<p>結果、48チーム中で<strong>6位</strong>。（上位2チームはチートで失格となったので<strong>実質は4位</strong>）</p>

<p><img src="https://lh3.googleusercontent.com/H8zoy7lrftuIo9ZQTN_LsUC3KsiGsNkOJbPzuW4vAxy4o6IOAH8=w547-h298-no"></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr"><a href="https://twitter.com/ijin">@ijin</a> <a href="https://twitter.com/AWSreInvent">@AWSreInvent</a> the rabbit icon was awarded to the team with the fastest response time to a request.0.0005s is not too shabby!</p>&mdash; Kyle Lichtenberg (@KyleLichtenberg) <a href="https://twitter.com/KyleLichtenberg/status/651573816301219840">October 7, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>ちなみに最速レスポンスタイムはうちのチームが叩きだした。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Our team - &quot;Ubercon&quot;! <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a> <a href="https://twitter.com/hashtag/AWSGameDay?src=hash">#AWSGameDay</a> <a href="http://t.co/dpRu1vicgM">pic.twitter.com/dpRu1vicgM</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/651544851620700160">October 6, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>詳細は今度日本で開催されるかも知れないので控えておくが、非常に楽しめたので次回は運営側に回って手伝おうかと思います！</p>

<h2>Day 1</h2>

<h3>Keynote</h3>

<p>Andy Jessy副社長による発表。今年のテーマは「<strong>自由</strong>」</p>

<ul>
<li>Amazon QuickSight</li>
<li>Amazon Kinesis Firehose</li>
<li>Amazon Snowball</li>
<li>MariaDB for RDS</li>
<li>AWS Database Migration Service</li>
<li>AWS Schema Conversion Tool</li>
<li>AWS Config Rules</li>
<li>Amazon Inspector</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/SSI_hMC3cjzUSvGPxT49FD26VBeY_QYt_qGoTLDPo8nBLwdmglM=w493-h544-no"></p>

<p><del>Oracle</del>からの自由、解放！</p>

<h3>WRK306 - AWS Professional Services Architecting Workshop</h3>

<p>実在した、ある企業のクラウド移行案件。RFP的なモノがあり、アーキテクチャをチーム内で議論し、最後にそれぞれ各チームが発表していく流れ。
かつてjawsugで主催を手伝ったワールドカフェ形式とほぼ同じだったので、チームメンバーを先導してCacooでさくさく構成図を起こしていく。
他のチームが模造紙にラフスケッチで発表する中、我らは綺麗に正本して、プロジェクターで登壇しながら発表。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">ワークショップはうちらのチームだけCacooで図を書いたので制覇した感がある。 <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/651869691699425281">October 7, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>最後に実際にどう移行したかというAWSチームからの回答。まず、移行フェーズを段階的に分け、最初はシステムをほぼそのままクラウド上に乗せた後に部分的に最適化してコンポーネントを置き換えて行ったという話。最後にLambdaになっていた部分があったのが興味深かった。</p>

<p>早く新サービスに対応したAWS Simple Iconsのアップデートが待たれるところ。</p>

<p><img src="https://lh3.googleusercontent.com/IVrSN7g0MnAfVa6pB4ajQWUZYPmpFMOH6Ych-FedX1HqxCfEHtc=w583-h346-no"></p>

<p>今回提案した内容。</p>

<h3>WRK305 - Zombie Apocalypse Survival: Building Serverless Microservices</h3>

<p><a href="https://ja.wikipedia.org/wiki/%E3%82%BE%E3%83%B3%E3%83%93%E3%81%AB%E3%82%88%E3%82%8B%E4%B8%96%E7%95%8C%E3%81%AE%E7%B5%82%E6%9C%AB">Zombie Apocalypse</a>が起こって、人類存亡の危機！途中まで実装されたチャットルームの機能を拡張・実装して危機を救え！というシナリオの元、LambdaとAPI Gatewayとjavascript sdkで実装されたサーバーレスアーキテクチャのワークショップ。</p>

<p>機能拡張の為に実装が必要なので、設計しながらチーム内で作業分担し、コードをせっせと書いていく。
ゾンビ出現のアラート通知、ヒートマップ描画、アンデッドカウンター、緊急食料倉庫の位置情報配信等、面白い機能要求が盛り沢山。</p>

<p><img src="https://lh3.googleusercontent.com/-UStcIzDdtS42SZTgt657iKvYHWlbcfktbvuCq3-LIioBfrBzgI=w600-h346-no"></p>

<p>ささっとSlack部屋を作り、githubでコードを共有しながらのチームワーク作業。多分、うちらのチームが一番多く実装できた感触。</p>

<p><img src="https://lh3.googleusercontent.com/WZ7nUMvRhoNzixWqjEdCFJ1wJqNH-BqjV4M4cq93mBXBnJ8UPOk=w493-h544-no"></p>

<p>このワークショップはかなりの人気で、開始30分前にすでに長蛇の列が。
運良くぎりぎり最後の参加者として入れたけど、皆どれだけゾンビが好きなんだ。。</p>

<h2>Day 2</h2>

<h3>Keynote</h3>

<p>Wernerl Vogels CTOの発表。</p>

<ul>
<li>Amazon Kinesis Analytics</li>
<li>X1 instance (100 cores, 1TB RAM)</li>
<li>t2.nano instance</li>
<li>Amazon EC2 Container Registry</li>
<li>Lambda

<ul>
<li>VPC support</li>
<li>Long running Functions (300s)</li>
<li>Scheduled Functions</li>
<li>Custom Retry Logic</li>
<li>Python</li>
</ul>
</li>
<li>AWS IOT</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/A4p3UvP0JiMxjpZF7L0zxdMFkU96aOYtZ-BExM2zFERDsebakXw=w493-h543-no"></p>

<p>前日にAndyが7つの自由を語って、当日はWernerが7つの法則を語る。</p>

<h3>WRK308 - AWS + ASK: Teaching Amazon Echo New Skills</h3>

<p>Amazon Echoを使った、Alexaのプログラミングワークショップ。音声によって、Echo経由でLambdaイベントを呼び出し、Alexaサービスと連携するカスタマイズしたスキルセットを実装して行く。</p>

<p>例えば、Alexaに好きな色を覚えさせて、後ほど聞くと答えてくれる機能とか。全てボイスコントロール。<a href="http://yoshidashingo.hatenablog.com/?page=1445224481">吉田さんの英語でも通じた</a>ので、かなり優秀。</p>

<p>新品のEchoを開封して使ったので、最後に貰える物かとささやかに期待したものの、$15のAWSクーポン配布のみ。さすが<del>ケチ</del>FrugalなAmazonさん。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Alexaとlambdaが連携してEchoが喋った！ <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a> <a href="http://t.co/V6QpNyj3tK">pic.twitter.com/V6QpNyj3tK</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/652234646231646208">October 8, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>




<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">Alexは今ユーザ駆動にしか対応してないけど、awsのイベント駆動はtop priorityとの事。そのうち例えばbilling alertを音声で通知できるようになるなぁ。楽しみだ。 <a href="https://twitter.com/hashtag/reinvent?src=hash">#reinvent</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/652239936968654848">October 8, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<h3>re:Play</h3>

<p>EDMの若きプリンスDJ、Zeddをシークレットゲストとして呼んでのアフター。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="en" dir="ltr">What a view for this secret <a href="https://twitter.com/Zedd">@zedd</a> show, this crowd does not end! <a href="https://twitter.com/hashtag/vegas?src=hash">#vegas</a> <a href="http://t.co/0Itv012o0k">pic.twitter.com/0Itv012o0k</a></p>&mdash; Rukes (@rukes) <a href="https://twitter.com/rukes/status/652400784353595392">October 9, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>もう完全にWernerのパーティー。</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">昨夜の <a href="https://twitter.com/hashtag/replay?src=hash">#replay</a> でこの積み上がったコンテナを見て、Docker Swarm を連想した人はさぞ多かったに違いない。 <a href="http://t.co/QxF2MkbHTi">pic.twitter.com/QxF2MkbHTi</a></p>&mdash; Michael H. Oshita (@ijin) <a href="https://twitter.com/ijin/status/652681828441063425">October 10, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>




<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/cT676BMT7A8 "></iframe></div>


<p>Zeldaのremixが良かった。</p>

<h3>終わりに</h3>

<p>結局セッションは一つも出なかったです。まあ、ビデオやスライドは公開されるので内容自体は後で把握可能なので別にいいかな。授業を聞きに来た分けでもないし。
それよりも、現地に来ているエンジニアと交流したり、実装まで含んだハンズオンのワークショップをやった方が楽しいし、糧となる。後はトレンドを肌感覚として体感するには良い場所なので行った事ない人には是非オススメしておきたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#HashiConf 2015に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/09/30/hashiconf-2015/"/>
    <updated>2015-09-30T03:11:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/09/30/hashiconf-2015</id>
    <content type="html"><![CDATA[<p>Portlandで開催された<a href="https://www.hashiconf.com">HashiConf 2015</a>に参加してきました。</p>

<h2>Day 1</h2>

<h3>Keynote</h3>

<p>Founder &amp; CEOのMitchell Hashimotoが登壇。
今までのHashiCorpプロダクトを紹介した上で、新プロダクトの紹介！</p>

<p><img src="https://lh3.googleusercontent.com/kV2iR87ZYBN9LuPjMxGmuPxg1t1xzZLlcgi5LV_y8TwzSvsIOVE=w479-h638-no"></p>

<p><a href="https://nomadproject.io">Nomad</a></p>

<p>コンテナスケジューラ。ちょうどあるサービスの一部のDocker化でスケジューリング方法を考えていたので、グッドタイミング。</p>

<p><img src="https://lh3.googleusercontent.com/PaK-SUH-tybvL7ILwZFFXrYVdylvzw1cu0bFR8rKDadbIRgA8cA=w479-h638-no"></p>

<p><a href="https://ottoproject.io">Otto</a></p>

<p>開発からデプロイまで対応したmicroservicesを念頭に入れたVagrantの後継。</p>

<h3>Operating Consul as an Early Adopter</h3>

<ul>
<li>初期の頃からconsulを運用した苦労話</li>
<li>v0.2から始めた</li>
<li><code>consule-template</code>

<ul>
<li>スケールしない。v0.6ではマシに</li>
<li>大きいクラスタで自身をDDOSする</li>
<li>watchesを使わないでcronで<code>-once</code></li>
</ul>
</li>
<li>consulのDNSが不安定な時期があったので、15秒毎にzone fileを書き出し内部DNSで運用</li>
<li>その他初期バージョンで諸々不具合を発見してArmonと一緒に修正</li>
<li>ご苦労様</li>
</ul>


<h3>HashiCorp Tools in the Modern Enterprise</h3>

<ul>
<li>エンプラだって頑張ってDevOpsしてるもん！</li>
<li>文字多めで眠くなっちゃった。。</li>
<li><a href="https://atlas.hashicorp.com/izanamee">Izanamee</a> イザナミ？</li>
</ul>


<h3>Resillient Infrastructure with Serf</h3>

<ul>
<li>Pagerdutyの人</li>
<li>SerfとChefと自社ツールを組み合わせて堅牢なインフラを構築</li>
<li><a href="https://github.com/PagerDuty/blender">Blender</a> - a modular remote command execution framework</li>
<li><a href="https://github.com/ranjib/serfx">SerfX</a> - a bare minimum ruby client for serf</li>
</ul>


<h3>Genesis: Terraforming a new Firefox crash stat infrastructure</h3>

<ul>
<li>Mozillaの人達による漫才ベースのプレゼン</li>
<li>Firefoxのクラッシュ統計データを受信するインフラの構築について</li>
<li>結構笑いがとれてた</li>
</ul>


<h3>The future of management, and how we&#8217;ll get there</h3>

<p>Puppetの作者Lukeさん。未来に観するディープで知見溢れるトーク</p>

<h2>Day 2</h2>

<h3>Keynote</h3>

<p>HashiCorpの哲学とAtlasの説明（2日目は新製品の発表はなし）</p>

<p><img src="https://lh3.googleusercontent.com/XzbJrBKpfWU73lMGv5tVFmfV90Uvyec7WWiizweiv_uTbZEEusY=w619-h465-no"></p>

<h3>Dockerizing all the Things</h3>

<ul>
<li>Docker社内でのCIでconsul使ってるよって話</li>
<li>あまり面白くなかった</li>
<li>20分も残して終了。。</li>
</ul>


<h3>Automate your Infrastructure</h3>

<p>以下のツールでいろいろ自動化してるよ（ﾌｰﾝ）</p>

<ul>
<li>Terraform</li>
<li>CircleCI</li>
<li>Docker (ECS)</li>
<li>Datadog</li>
<li>Slack</li>
</ul>


<h3>Managing Applications at Scale</h3>

<ul>
<li>CoreOSの人</li>
<li>Nomad vs Kubernetes</li>
<li>CLI demo</li>
</ul>


<h3>Repeatable, Extensible Infra at Yelp</h3>

<ul>
<li>YelpのSite Reliability Engineer</li>
<li>内部ツールで起動、puppetでプロビジョニング</li>
<li>Packerやpuppet managed VPCだったけど、今はTerraform</li>
<li>Smartstack (Service discovery)

<ul>
<li>Nerve</li>
<li>Synapse</li>
<li>Hacheck</li>
<li>qdisc_tools</li>
</ul>
</li>
<li>Sensu</li>
<li>nsone</li>
<li><a href="https://github.com/terraform-community-modules">terraform community modules</a>をたくさん書いたよ</li>
</ul>


<h3>Virtual Machines, Containers, Lambdas? Oh my!</h3>

<ul>
<li>AWSの中の人（DevOps担当）</li>
<li>Microservicesについて</li>
<li>導入の判断基準</li>
<li>VM（EC2, Packer, Terraform/Cloudformatio, Consul)</li>
<li>Container (ECS, Nomad)</li>
<li>Lambda (サーバレスアーキテクチャ。例：<a href="http://squirrelbin.com">SquirrelBin</a></li>
<li>さらっと自社サービスをたっくさん紹介した後、結論はLambdaとAPI Gateway押し</li>
<li>そんなにサービスを詰めこめなくても。。</li>
</ul>


<h2>感想</h2>

<p>Nomadの発表が一番エキサイティングだったけど、こういうカンファレンスは中の人やスピーカーや他のユーザーと直接話せるのが醍醐味。プロダクトの担当者に直接フィードバックを伝えたり、展望を聞いたりできて楽しかったです。また、会場で話した参加者も多種多様でアメリカ以外だとスペイン、オーストラリア、ニュージーランド、インド、日本等がいて、世界中から注目されている感じでした。</p>

<p>第一回目ということで約300人の中規模だけど、このぐらいが皆の距離感近くて良い雰囲気。</p>

<h2>その他</h2>

<ul>
<li>懇親会で飛び込みLTしたかったが会場設備が対応できなく、断念</li>
<li>Portland心地良くて過ごしやすい！</li>
<li>記念にもらったHashiCorpとハシ（箸）をかけたジュークは誰も理解してなかった
（Mitchellが言うには日本人参加者が理解してくれるから良いんだと）</li>
</ul>


<p><img src="https://lh3.googleusercontent.com/50dhedo-8s4QS_7Chw6v1U6Ow58b4d53HHYlVQGQ6hwwuN6CT7c=w427-h320-no"></p>

<p>さて、来週はre:Inventだ！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISUCON5の予選に記念参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/09/27/isucon5-qualifier/"/>
    <updated>2015-09-27T17:01:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/09/27/isucon5-qualifier</id>
    <content type="html"><![CDATA[<p>とあるエンジニアが言い放ちました。</p>

<p>「<em>上位に届かないチームはただの記念参加だよねー。</em>」</p>

<p>というわけで、今年のISUCONは見事に予選落ちしました。</p>

<h3>お題</h3>

<p>「<strong>ISUx</strong>i」というどこか懐かしい響きの「高負荷に耐えられるSNSコミュニティサイト」</p>

<p>友達、記事、コメント、足あと機能が揃っており、以前より複雑度が増したなかなかの凝った作り。</p>

<h3>起こったこと</h3>

<p>これはESIによるpartial cachingが出来るので、Varnishでやってみよう！</p>

<p>と意気込んだものの、エラーが解決できず結局は間に合わずに終了ーーっ。</p>

<h3>やりたかったこと</h3>

<ul>
<li>Varnish + ESI + Redis &amp; MySQL</li>
</ul>


<h3>やれたこと</h3>

<p>具体的な作業内容は今手元にないので、ぼんやりと。</p>

<ul>
<li>MySQLのクエリー修正、パラメータ、Indexの追加</li>
<li>nginxのパラメータ追加</li>
<li>kernelのパラメータ追加</li>
<li>一部 redis化</li>
<li>rubyプロセスの調整</li>
<li>sidekiqのワーカーで遅延書き込み</li>
</ul>


<h3>はまったとこ</h3>

<p>今回はいろいろ初めてがあったので無駄に時間を潰した感じ。</p>

<ul>
<li><code>systemd</code> -
最新のUbuntu 15.04はsystemdなんですね。ずっと14.04 LTSのupstartに慣れていたので、こっちは初めて触わった。</li>
<li><code>apparmor</code> -
設定ファイルをsymlinkでやろうとすると読み込まれず。。こいつのせいだと気づくのにちょっと手間取った。いらない子には怒りの<code>apt-get purge</code>を。</li>
<li><code>mysql</code> -
なんか設定ファイルが/etc/mysql/my.cnf単体じゃなくて、symlinkされたりいろんなディレクトリに散らばってたりで若干戸惑った。後、上記のapparmor関連で設定ファイルがしばらく全然反映されずに。。</li>
<li><code>varnish</code> -
こちらもvclやパラメータ指定が本来<code>/etc/default/varnish</code>で出来るはずが、なかなか反映されずに苦労した。Varnish 4.0のパッケージはapt-getですんなり入るんだけど、起動スクリプトが<code>/etc/init.d/varnish</code>に設置されるのに、そちらは無視され、systemdの方が優先される模様。カスタマイズするには<code>/lib/systemd/system/varnish.service</code>をコピって編集して<code>daemon-reload</code>が必要。詳しくは<a href="http://deshack.net/how-to-varnish-listen-port-80-systemd/">こちら</a></li>
</ul>


<h3>終わりに</h3>

<p>競技内容が確実に進化していて、非常ーーに楽しめました！その分、出題者の苦労が計り知れず。。こんどビールでも奢ります。今年の本戦は残念ながら行けないけど、外野として楽しくポップコーンでも食べながら観戦したい所ですね。</p>

<h3>おまけ</h3>

<p>現在はHashiConfに向けての飛行機の中だけど、悔しいので機内で復習しておきます！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YAPC::Asia Tokyo 2015に参加してきた]]></title>
    <link href="http://ijin.github.io/blog/2015/08/23/yapc-asia-tokyo-2015/"/>
    <updated>2015-08-23T15:27:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/08/23/yapc-asia-tokyo-2015</id>
    <content type="html"><![CDATA[<p>例年この時期は海外にいるので、なかなか行けなかったYAPC::Asia Tokyo 2015にやっと参加してきた。</p>

<p>スケジュール上、今年は参加できるぞって意気込んでいたら、まさかのSold Out&#8230;</p>

<p>それをtwitter上で嘆いていたら、<a href="https://twitter.com/kenjiskywalker">@kenjiskywalker</a>さんから救いの手が！</p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr"><a href="https://twitter.com/ijin">@ijin</a> Tシャツ付きの前売り券購入したのですが、スピーカー枠で参加できそうなのでお譲りしましょうか？</p>&mdash; kenjiskywalker (@kenjiskywalker) <a href="https://twitter.com/kenjiskywalker/status/619079064880463872">July 9, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>感謝！</p>

<p>さて、一口コメント</p>

<p><strong>Consulと自作OSSを活用した100台規模のWebサービス運用</strong>] - <a href="https://twitter.com/fujiwara">@fujiwara</a></p>

<p><a href="https://github.com/sorah/mamiya">mamiya</a>や<a href="http://aws.amazon.com/codedeploy/">AWS CodeDeploy</a>にインスパイアされた<a href="https://github.com/fujiwara/stretcher">stretcher</a>を使ったイベントベースのdeploy周りが面白かった。s3からの取得失敗時の処理は考えてないといけない。</p>

<p><strong>Conway&#8217;s Law of Distributed Work</strong> - Casey West</p>

<p>最近はリモートワークが殆どなので、なかなか共感できる部分が多かった。コミュニケーション大事。</p>

<p><strong>大規模でも小中規模サービスでも捗る microservices な Web サービスのつくりかた</strong> - <a href="https://twitter.com/yappo">@Yappo</a></p>

<p>どのタイミングでコンポーネントの分割をするか。ちゃんと設計しようねって話</p>

<p><strong>ISUCONの勝ち方</strong> - <a href="https://twitter.com/kazeburo">@kazeburo</a></p>

<p>ポイントがよく纏められていて、うちらのチームでも多くを実践していた。まだ勝ててないけど。
CPUやB+ Treeの気持ちになって考える事が大事。</p>

<p><strong>我々はどのように冗長化を失敗したのか</strong> - <a href="https://twitter.com/kenjiskywalker">@kenjiskywalker</a></p>

<p>Networkが不安定だと、様々な冗長化に仕組みがうまく作動しない。検証はProductionと同じ環境でやりましょう。</p>

<p><strong>Profiling &amp; Optimizing in Go</strong> - Brad Fitzpatrick</p>

<p>Bradさんのライブコーディング。奥が深かった。</p>

<p><strong>LT</strong></p>

<p>どれもこれもハイレベル！</p>

<p>特に素晴らしかったのが、テンポの良い<a href="https://twitter.com/yoku0825">@yoku0825</a>さんの<strong>MySQL 5.7の罠があなたを狙っている</strong> と超早業を披露した<a href="http://conbu.net">CONBU</a>さんの<strong>CONBUの道具箱</strong></p>

<iframe allowfullscreen="" frameborder="0" height="355" marginheight="0" marginwidth="0" scrolling="no" src="http://ijin.github.io//www.slideshare.net/slideshow/embed_code/key/dJ6c2p0tc7QM3B" style="border-width: 1px; border: 1px solid #CCC; margin-bottom: 5px; max-width: 100%;" width="425"> </iframe>


<p> <br /></p>

<div class='embed tweet'><blockquote class="twitter-tweet"><p lang="ja" dir="ltr">突然目の前に無線APが生えてきた <a href="https://twitter.com/hashtag/yapcasia?src=hash">#yapcasia</a> <a href="http://t.co/UWcSzvRv08">pic.twitter.com/UWcSzvRv08</a></p>&mdash; ぷりんたいは求職中です、 (@spacepro_be) <a href="https://twitter.com/spacepro_be/status/635004222291902464">August 22, 2015</a></blockquote>
<script async src="http://ijin.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script></div>


<p>いやー、非常に楽しめました。運営の皆様、ありがとうございました！！</p>

<p>さて、これから出国ー。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHubのeventをLambdaで処理してSlackへ通知]]></title>
    <link href="http://ijin.github.io/blog/2015/08/06/github-to-lambda-to-slack/"/>
    <updated>2015-08-06T01:46:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/08/06/github-to-lambda-to-slack</id>
    <content type="html"><![CDATA[<p>ちょっと前にGitHubのeventを<a href="https://aws.amazon.com/lambda/">AWS Lambda</a>で処理して、GitHubやSlackのAPIを叩く仕組みを作ったので、メモ。</p>

<p>材料</p>

<ul>
<li>Github</li>
<li>SNS</li>
<li>KMS</li>
<li>Lambda</li>
<li>Slack</li>
</ul>


<p>やりたいことはこんな感じ。</p>

<p><img src="https://lh3.googleusercontent.com/-aep_hTkw5Mo/VjkHcm612yI/AAAAAAAABbo/00aae3JXUkc/s548-Ic42/github%25252Blambda%25252Bslack%252520%2525281%252529.png"></p>

<p>あるGitHubリポジトリのissuesに特定のコメントが書き込まれると、そのユーザはプロジェクトのteamに自動で追加されて、Slackへ通知が流れるというモノです。</p>

<h2>SNS</h2>

<p>まずは媒介となるSNSの作成。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ aws sns create-topic --name github --region ap-northeast-1
</span><span class='line'>{
</span><span class='line'>    "TopicArn": "arn:aws:sns:ap-northeast-1:123456789012:github"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>次にSNSに対してpublishできるIAM userを作成</p>

<p>IAM Policy</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "Version": "2012-10-17",
</span><span class='line'>  "Statement": [
</span><span class='line'>    {
</span><span class='line'>      "Action": [
</span><span class='line'>        "sns:Publish"
</span><span class='line'>      ],
</span><span class='line'>      "Sid": "Stmt0000000000000",
</span><span class='line'>      "Resource": [
</span><span class='line'>        "arn:aws:sns:ap-northeast-1:123456789012:github"
</span><span class='line'>      ],
</span><span class='line'>      "Effect": "Allow"
</span><span class='line'>    }
</span><span class='line'>  ]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>GitHub</h2>

<ul>
<li>organization: <code>my_org</code></li>
<li>repository: <code>test</code></li>
<li>team: <code>reader</code></li>
</ul>


<h3>SNS連携</h3>

<p><em>Webhooks &amp; Services</em> からAmazonSNSと連携</p>

<p><img src="https://lh3.googleusercontent.com/u4I9Z_Ing9YzhmVCQhMACwYDVIJxJM7C-aDmyMsNL3o=w328-h190-no"></p>

<p>AWS KEYには先ほど作成したIAMユーザのを利用。SNS topicのarnにはregionが書かれているにも関わらず、GitHubの方では明示的に指定が必要。</p>

<p><img src="https://lh3.googleusercontent.com/kppZQx_RdhyC11LB7a0cPtppDUiKgfZBm6laYvRG3zA=w382-h289-no"></p>

<h3>通知するeventの有効化</h3>

<p>さて、GitHubではSNSの場合、<a href="https://api.github.com/hooks">hooksのjson</a>にある通り、<code>push</code>時のeventにしか対応していないので、</p>

<figure class='code'><figcaption><span>hooks </span><a href='https://api.github.com/hooks'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="s2">&quot;name&quot;</span><span class="err">:</span> <span class="s2">&quot;amazonsns&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;events&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="s2">&quot;push&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span></code></pre></td></tr></table></div></figure>


<p>GitHubの<a href="https://developer.github.com/v3/orgs/hooks/">Webhook API</a>に従って<code>issue_comment</code>を追加してやります。</p>

<p>先ほどのSNS連携のhook idを取得するには<code>GET /orgs/:org/hooks</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">HOOK_ID</span><span class="o">=</span><span class="k">$(</span>curl -H <span class="s1">&#39;Uer-Agent: ijin&#39;</span> -X GET -s -H <span class="s2">&quot;Authorization: token xxxxxxxxxx&quot;</span> <span class="se">\</span>
</span><span class='line'>https://api.github.com/repos/my_org/test/hooks | jq <span class="s1">&#39;.[].id&#39;</span><span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>編集するには<code>PATCH /orgs/:org/hooks/:id</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -H <span class="s1">&#39;Uer-Agent: ijin&#39;</span> -X PATCH -s -H <span class="s2">&quot;Authorization: token xxxxxxxxxx&quot;</span> <span class="se">\</span>
</span><span class='line'>https://api.github.com/repos/my_org/test/hooks/<span class="nv">$HOOK_ID</span> -d <span class="s1">&#39;{&quot;add_events&quot;: [&quot;issue_comment&quot;]}&#39;</span> | jq .
</span></code></pre></td></tr></table></div></figure>


<p>Web UIからは分からないので、ついでに<code>reader</code> teamのIDも取得しておく</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -H <span class="s1">&#39;Uer-Agent: ijin&#39;</span> -X GET -s -H <span class="s2">&quot;Authorization: token xxxxxxxxxx&quot;</span> <span class="se">\</span>
</span><span class='line'>https://api.github.com/orgs/my_org/teams | jq <span class="s1">&#39;.[] | select(.name==&quot;reader&quot;)&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>（※）User-Agentは<a href="https://developer.github.com/v3/#user-agent-required">必須</a></p>

<p>これで、誰かがコメントをした時にもSNSが飛びます。</p>

<h2>KMS</h2>

<p>lambdaでは以下の認証情報を使うので、予めKMSで暗号化しておく。</p>

<ul>
<li>GitHub token</li>
<li>Slack webhook</li>
</ul>


<p>rubyで暗号化する場合</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;aws-sdk&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;base64&#39;</span>
</span><span class='line'><span class="n">kms</span> <span class="o">=</span> <span class="ss">Aws</span><span class="p">:</span><span class="ss">:KMS</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">region</span><span class="p">:</span> <span class="s1">&#39;us-east-1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">Base64</span><span class="o">.</span><span class="n">encode64</span> <span class="n">kms</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">key_id</span><span class="p">:</span> <span class="s2">&quot;alias/ijin&quot;</span><span class="p">,</span> <span class="ss">plaintext</span><span class="p">:</span> <span class="s1">&#39;my plain text code&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">ciphertext_blob</span>
</span></code></pre></td></tr></table></div></figure>


<p>javascriptの場合</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">aws</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;aws-sdk&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">kms</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">aws</span><span class="p">.</span><span class="nx">KMS</span><span class="p">({</span> <span class="nx">region</span><span class="o">:</span> <span class="s1">&#39;us-east-1&#39;</span> <span class="p">});</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">text</span> <span class="o">=</span> <span class="s1">&#39;my plain text code&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nx">kms</span><span class="p">.</span><span class="nx">encrypt</span><span class="p">({</span><span class="nx">KeyId</span><span class="o">:</span> <span class="s1">&#39;alias/ijin&#39;</span><span class="p">,</span> <span class="nx">Plaintext</span><span class="o">:</span> <span class="nx">text</span><span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">err</span><span class="p">.</span><span class="nx">stack</span><span class="p">);</span>
</span><span class='line'>  <span class="k">else</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">CiphertextBlob</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;base64&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>こうしておくと、SCMに入れても安心。</p>

<p>また、KMSキーの実行権限もlambdaのroleに紐づけておく。</p>

<p><img src="https://lh3.googleusercontent.com/oMHQ76XC7RQUCR_fEo9JyaMhPKSbnIdhCzjIWurEJ9c=w542-h358-no"></p>

<h2>Lambda</h2>

<p>Lambda function作成時にはSNSをevent sourceとして指定。</p>

<p><img src="https://lh3.googleusercontent.com/uDXkEVLrXT1BdUSbiMu3v5lnwTqCoXOkv_nu07XVxkk=w555-h235-no"></p>

<p>(※) KMSは現在us-eastにしかないので、そこ以外のregionでlambdaを実行する場合は、<code>timeout</code>は若干長めに指定して置くと良さげ</p>

<p>コードはこんな感じ。</p>

<ol>
<li>GitHubからSNS hookを受け取って</li>
<li>コメントした内容が<code>join</code>の場合</li>
<li>KMSによってGitHubのtokenを復号化し</li>
<li>そのユーザをteamへ追加する</li>
<li>その後、別lambda functionでslackへ通知する</li>
</ol>


<div><script src='https://gist.github.com/ef105e192a030571d83f.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>




<div><script src='https://gist.github.com/f83e33a6ae0acd83902a.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>


<p>nodeのlibraryを使うともっとスッキリ書けたけど、1 function 1 fileで纏めたかったのでやや冗長なコードになっちゃいました。。</p>

<h2>実行</h2>

<p>GitHubでコメント</p>

<p><img src="https://lh3.googleusercontent.com/KY7fwR-laXAJBQhJFv9VKzo_ydWFzeKep0G-3kgS0mM=w388-h128-no"></p>

<p>Lambda発動</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">53.108</span><span class="nx">Z</span>   <span class="nx">a09e3c80</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">bbb5</span><span class="o">-</span><span class="mi">55</span><span class="nx">b693433c0e</span>    <span class="nx">user</span><span class="o">:</span> <span class="nx">ijin2</span>
</span><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">53.108</span><span class="nx">Z</span>  <span class="nx">a09e3c80</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">bbb5</span><span class="o">-</span><span class="mi">55</span><span class="nx">b693433c0e</span>    <span class="nx">comment</span><span class="o">:</span> <span class="nx">join</span>
</span><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">55.417</span><span class="nx">Z</span>  <span class="nx">a09e3c80</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">bbb5</span><span class="o">-</span><span class="mi">55</span><span class="nx">b693433c0e</span>    <span class="nx">status</span> <span class="nx">code</span><span class="o">:</span> <span class="mi">200</span>
</span><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">55.418</span><span class="nx">Z</span>  <span class="nx">a09e3c80</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">bbb5</span><span class="o">-</span><span class="mi">55</span><span class="nx">b693433c0e</span>    <span class="nx">response</span><span class="o">:</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;state&quot;</span><span class="o">:</span> <span class="s2">&quot;pending&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;https://api.github.com/teams/1234567/memberships/ijin2&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">55.418</span><span class="nx">Z</span>  <span class="nx">a09e3c80</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">bbb5</span><span class="o">-</span><span class="mi">55</span><span class="nx">b693433c0e</span>    <span class="nx">Added</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">team</span>
</span><span class='line'><span class="nx">END</span> <span class="nx">RequestId</span><span class="o">:</span> <span class="nx">a09e3c80</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">bbb5</span><span class="o">-</span><span class="mi">55</span><span class="nx">b693433c0e</span>
</span><span class='line'><span class="nx">REPORT</span> <span class="nx">RequestId</span><span class="o">:</span> <span class="nx">a09e3c80</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">bbb5</span><span class="o">-</span><span class="mi">55</span><span class="nx">b693433c0e</span> <span class="nx">Duration</span><span class="o">:</span> <span class="mf">5211.48</span> <span class="nx">ms</span> <span class="nx">Billed</span> <span class="nx">Duration</span><span class="o">:</span> <span class="mi">5300</span> <span class="nx">ms</span> <span class="nx">Memory</span> <span class="nx">Size</span><span class="o">:</span> <span class="mi">128</span> <span class="nx">MB</span>  <span class="nx">Max</span> <span class="nx">Memory</span> <span class="nx">Used</span><span class="o">:</span> <span class="mi">14</span> <span class="nx">MB</span>   
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">56.058</span><span class="nx">Z</span>   <span class="nx">a25c66fc</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">11</span><span class="nx">e5</span><span class="o">-</span><span class="nx">b291</span><span class="o">-</span><span class="mi">25</span><span class="nx">d4ee441689</span>    <span class="nx">Received</span> <span class="nx">event</span><span class="o">:</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;username&quot;</span><span class="o">:</span> <span class="s2">&quot;ijin2&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;icon_url&quot;</span><span class="o">:</span> <span class="s2">&quot;https://avatars.githubusercontent.com/u/12809425?v=3&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;text&quot;</span><span class="o">:</span> <span class="s2">&quot;Added to the team&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">58.310</span><span class="nx">Z</span>  <span class="nx">a25c66fc</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">b291</span><span class="o">-</span><span class="mi">25</span><span class="nx">d4ee441689</span>    <span class="mi">200</span>
</span><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">58.311</span><span class="nx">Z</span>  <span class="nx">a25c66fc</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">b291</span><span class="o">-</span><span class="mi">25</span><span class="nx">d4ee441689</span>    <span class="nx">ok</span>
</span><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mi">11</span><span class="nx">T15</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">58.311</span><span class="nx">Z</span>  <span class="nx">a25c66fc</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">b291</span><span class="o">-</span><span class="mi">25</span><span class="nx">d4ee441689</span>    <span class="nx">Successfully</span> <span class="nx">posted</span> <span class="nx">to</span> <span class="nx">Slack</span><span class="o">!</span>
</span><span class='line'><span class="nx">END</span> <span class="nx">RequestId</span><span class="o">:</span> <span class="nx">a25c66fc</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">11</span><span class="nx">e5</span><span class="o">-</span><span class="nx">b291</span><span class="o">-</span><span class="mi">25</span><span class="nx">d4ee441689</span>
</span><span class='line'><span class="nx">REPORT</span> <span class="nx">RequestId</span><span class="o">:</span> <span class="nx">a25c66fc</span><span class="o">-</span><span class="mi">403</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="nx">e15</span><span class="o">-</span><span class="nx">b291</span><span class="o">-</span><span class="mi">25</span><span class="nx">d4ee441689</span> <span class="nx">Duration</span><span class="o">:</span> <span class="mf">2268.06</span> <span class="nx">ms</span> <span class="nx">Billed</span> <span class="nx">Duration</span><span class="o">:</span> <span class="mi">2300</span> <span class="nx">ms</span> <span class="nx">Memory</span> <span class="nx">Size</span><span class="o">:</span> <span class="mi">128</span> <span class="nx">MB</span>  <span class="nx">Max</span> <span class="nx">Memory</span> <span class="nx">Used</span><span class="o">:</span> <span class="mi">14</span> <span class="nx">MB</span>   
</span></code></pre></td></tr></table></div></figure>


<p>teamへの追加（招待）</p>

<p><img src="https://lh3.googleusercontent.com/lzamiiNraeHYD7FI6rrb8-403hxjzVRrAqGG6k3sBcc=w474-h191-no"></p>

<p>Slackへ通知</p>

<p><img src="https://lh3.googleusercontent.com/EeEiHydBDc29YhVI6MBUcdj1WUzMXnf_Sis3U-URqhw=w388-h147-no"></p>

<h2>結論</h2>

<p>簡単にできますね。実はこんな風に作っちゃった2週間後ぐらいにAWSの人も似たような<a href="https://aws.amazon.com/blogs/compute/dynamic-github-actions-with-aws-lambda/">ブログ</a>を書いていた事を発見しましたが。まあ、こっちはKMSとSlack使ってるので。。</p>

<p>後、KMSのアイコンが欲しい！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data PipelineによるDynamoDBのexport]]></title>
    <link href="http://ijin.github.io/blog/2015/07/02/dynamodb-export-with-datapipeline/"/>
    <updated>2015-07-02T20:28:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/07/02/dynamodb-export-with-datapipeline</id>
    <content type="html"><![CDATA[<p>ちょっとハマったのでメモ。</p>

<p>DynamoDBにはRDSみたいなスナップショットによるバックアップ機能がなく、データを一括でexportするにはフルスキャンしかありません。
AWSではData Pipelineによるs3へのexportテンプレートがあって、それを使うとEMRクラスタが立ち上がりHive経由で大量の処理をして、s3へ書き出してくれます。</p>

<p>1000万件程度の小さな件数だとデフォルトのテンプレートがそのまま使えるけど、1億件近くになると失敗したりタイムアウトしたりするので、パラメータの調整が必要になってきます。</p>

<h3>前提</h3>

<ul>
<li>約1億件</li>
<li>20GB</li>
<li>Provisioned Throughput (reads): 1000</li>
<li>Read Throughput Percent: 1.0</li>
<li>2時間以内のexport</li>
</ul>


<h3>エラー</h3>

<p>具体的には以下のようなエラーに遭遇しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Caused by: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error
</span><span class='line'> while processing row {"item":{"id_list":"{\"l\":[{\"n\":\"958\"},
</span><span class='line'>{\"n\":\"704\"},{\"n\":\"847\"},{\"n\":\"232\"},{\"n\":\"72\"}]}",
</span><span class='line'>"code":"{\"s\":\"adarea9\"}","user_area":"{\"s\":\"91657-adarea9\"}",
</span><span class='line'>"user":"{\"s\":\"91657\"}","app_code":"{\"s\":\"xxx\"}","last_seen_at":
</span><span class='line'>"{\"s\":\"2010-06-23 22:57:49 +0000\"}","target_id":"{\"n\":\"395\"}",
</span><span class='line'>"count":"{\"n\":\"44\"}","promo_id":"{\"n\":\"125\"}"}} at 
</span><span class='line'>org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:550) at 
</span><span class='line'>org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:177) 
</span><span class='line'>... 8 more Caused by: org.apache.hadoop.hive.ql.metadata.HiveException: 
</span><span class='line'>java.io.IOException: All datanodes 10.160.102.191:9200 are bad. Aborting... at 
</span><span class='line'>org.apache.hadoop.hive.ql.exec.FileSinkOperator.processOp(FileSinkOperator.java:651) at 
</span><span class='line'>org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:793) at org.apach</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2015-06-29 13:33:31,610 Stage-1 map = 100%, reduce = 0% MapReduce Total cumulative 
</span><span class='line'>CPU time: 14 minutes 19 seconds 0 msec Ended Job = job_1435578726935_0002 with 
</span><span class='line'>errors Error during job, obtaining debugging information... 
</span><span class='line'>Examining task ID: task_1435578726935_0002_m_000008 (and more) from job job_1435578726935_0002 
</span><span class='line'>Examining task ID: task_1435578726935_0002_m_000000 (and more) from job job_1435578726935_0002 
</span><span class='line'>Examining task ID: task_1435578726935_0002_m_000000 (and more) from job job_1435578726935_0002 
</span><span class='line'>Task with the most failures(4): 
</span><span class='line'>----- Task ID: task_1435578726935_0002_m_000003 URL: http://ip-10-160-25-23.ap-northeast-1.compute.
</span><span class='line'>internal:9026/taskdetails.jsp?jobid=job_1435578726935_0002&tipid=task_1435578726935_0002_m_000003
</span><span class='line'>----- Diagnostic Messages for this Task: Error: GC overhead limit exceeded FAILED: 
</span><span class='line'>Execution Error, return code 2 from org.apache.hadoop.hive.ql.exec.mr.MapRedTask 
</span><span class='line'>MapReduce Jobs Launched: Job 0: Map: 10 Cumulative CPU: 859.0 sec HDFS Read: 0 HDFS Write: 0 FAIL Total MapRed</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2015-06-30 02:32:17,929 Stage-1 map = 100%, reduce = 0%, Cumulative CPU 1605.94 sec 
</span><span class='line'>MapReduce Total cumulative CPU time: 26 minutes 45 seconds 940 msec Ended Job = 
</span><span class='line'>job_1435627213542_0001 with errors Error during job, obtaining debugging information... 
</span><span class='line'>Examining task ID: task_1435627213542_0001_m_000004 (and more) from job job_1435627213542_0001 
</span><span class='line'>Examining task ID: task_1435627213542_0001_m_000004 (and more) from job job_1435627213542_0001 
</span><span class='line'>Examining task ID: task_1435627213542_0001_m_000004 (and more) from job job_1435627213542_0001 
</span><span class='line'>Task with the most failures(4): ----- Task ID: task_1435627213542_0001_m_000000 URL: 
</span><span class='line'>http://ip-10-150-205-59.ap-northeast-1.compute.internal:9026/taskdetails.jsp?
</span><span class='line'>jobid=job_1435627213542_0001&tipid=task_1435627213542_0001_m_000000 ----- 
</span><span class='line'>Diagnostic Messages for this Task: AttemptID:attempt_1435627213542_0001_m_000000_3 
</span><span class='line'>Timed out after 600 secs FAILED: Execution Error, return code 2 from 
</span><span class='line'>org.apache.hadoop.hive.ql.exec.mr.MapRedTask MapReduce Jobs Launched: Job 0: Map: 10 Cu</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error: java.lang.RuntimeException: Hive Runtime Error while closing operators at 
</span><span class='line'>org.apache.hadoop.hive.ql.exec.mr.ExecMapper.close(ExecMapper.java:260) at 
</span><span class='line'>org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:81) at 
</span><span class='line'>org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:432) at 
</span><span class='line'>org.apache.hadoop.mapred.MapTask.run(MapTask.java:343) at 
</span><span class='line'>org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:175) at 
</span><span class='line'>java.security.AccessController.doPrivileged(Native Method) at 
</span><span class='line'>javax.security.auth.Subject.doAs(Subject.java:415) at 
</span><span class='line'>org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1548) at 
</span><span class='line'>org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:170) 
</span><span class='line'>Caused by: org.apache.hadoop.hive.ql.metadata.HiveException: 
</span><span class='line'>java.io.IOException: All datanodes 10.186.28.181:9200 are bad. 
</span><span class='line'>Aborting... at org.apache.hadoop.hive.ql.exec.FileSinkOperator$FSPaths.closeWriters(FileSinkOperator.java:168) at 
</span><span class='line'>org.apache.hadoop.hive.ql.exec.FileSinkOperator.closeOp(FileSinkOperator.java:882) at org.apache.hadoop.</span></code></pre></td></tr></table></div></figure>


<p>Hive Runtime ErrorやGCエラー等が出てますね。</p>

<h3>原因</h3>

<p>通常のexportテンプレートではEMRはなんと<strong>m1.medium</strong>のcore taskが一台のみ起動して処理が走ります。
各種ヒープサイズの設定（<code>YARN_RESOURCEMANAGER_HEAPSIZE</code> 等）は<a href="https://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/HadoopMemoryDefault_H2.html">instance typeによって決まって</a>おり、この件数とデータサイズではHEAPSIZEが不足し、GCエラー等が発生してOut of Memory状態になって処理が落ちるようです。
そこで、メモリをもっと搭載している大きめのインスタンスでHEAPSIZEを確保してあげる必要があります。</p>

<h3>解決策</h3>

<p>こんな感じ。</p>

<p><img src="https://lh3.googleusercontent.com/ghExdELQB1cIE9K-d97gDqz7a634413GOTxAHhvJsBg"></p>

<table>
<thead>
<tr>
<th></th>
<th>parameter</th>
<th>default value</th>
<th>new value</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>core &amp; master instance type</td>
<td>m1.medium</td>
<td>m3.xlarge</td>
</tr>
<tr>
<td></td>
<td>core instance count</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td></td>
<td>AMI version</td>
<td>3.3.2</td>
<td>3.8.0</td>
</tr>
</tbody>
</table>


<p>m3.xlargeにした事で処理が落ちる事なくスムーズに実行されるようになりました。core countを増やしたのは、exportテンプレートのデフォルト設定だとcountが1なので、mapperが不足し、DynamoDBで設定したthroughput (1000)をフルに使い切る事ができなく、デフォルトのタイムアウト時間（2時間）に達して処理自体がキャンセルされてしまうからです。EMR側のスループットも上げる為に必要な変更でした。また、Hadoopの<a href="http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/ami-versions-supported.html">AMI version</a>も古い3.3.2から最新の3.8.0にしてあります。</p>

<p>これらによって、export処理がだいたい1時間ちょいで完了します。</p>

<p>その時の試行錯誤がこれ。</p>

<p><img src="https://lh3.googleusercontent.com/xatqR0hx1M6PhroKFNAksOplqgqYgqsaCJgonanQyzA=w437-h197-no"></p>

<h3>計算</h3>

<p>provisioned throughputに対するバックアップ時間の目安を計算するには以下の通り。</p>

<p>20GBのデータ、1億件のレコード、1000 throughputとして、</p>

<p><code>平均item size = 20*1024*1024*1024/100000000 =~  215 byte</code></p>

<p>4KB以下なので4KB blockのreadとなります。
Hive Queryのread処理は<a href="http://hipsterdevblog.com/blog/2015/05/30/analysing-dynamodb-index-usage-in-hive-queries/">eventually consistentになる</a>ので、1 IOPSに対して8KBのデータが読み込めます。
そうすると</p>

<p><code>DynamoDB scan時間 = (20*1024*1024*1024)/(1000*8*1024*60) = 43.7分</code></p>

<p>実際にはEMRクラスタのオーバーヘッドが20分弱程度あるので、これに若干加算します。</p>

<p>図にするとこんな風になります。</p>

<iframe width="670" height="412" seamless frameborder="0" scrolling="no" src="https://docs.google.com/spreadsheets/d/14oyOry-bnrqIgYxdN36Qdwv3VC1lhdku4QffzFh8iIc/pubchart?oid=1201814511&amp;format=interactive"></iframe>


<p>バックアップのタイミングでDynamoDBのthroughputをガツンと上げれば、件数によっては短時間で済む場合もあるので、参考にでも！</p>

<p>（※ Production Trafficに影響がないように、Read Throughput Percentは適切に設定する必要があります）</p>
]]></content>
  </entry>
  
</feed>
