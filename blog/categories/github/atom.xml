<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | @ijin]]></title>
  <link href="http://ijin.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://ijin.github.io/"/>
  <updated>2019-06-25T04:52:50+09:00</updated>
  <id>http://ijin.github.io/</id>
  <author>
    <name><![CDATA[Michael H. Oshita]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitHubのeventをLambdaで処理してSlackへ通知]]></title>
    <link href="http://ijin.github.io/blog/2015/08/06/github-to-lambda-to-slack/"/>
    <updated>2015-08-06T01:46:00+09:00</updated>
    <id>http://ijin.github.io/blog/2015/08/06/github-to-lambda-to-slack</id>
    <content type="html"><![CDATA[<p>ちょっと前にGitHubのeventを<a href="https://aws.amazon.com/lambda/">AWS Lambda</a>で処理して、GitHubやSlackのAPIを叩く仕組みを作ったので、メモ。</p>

<p>材料</p>

<ul>
<li>Github</li>
<li>SNS</li>
<li>KMS</li>
<li>Lambda</li>
<li>Slack</li>
</ul>


<p>やりたいことはこんな感じ。</p>

<p><img src="https://lh3.googleusercontent.com/-aep_hTkw5Mo/VjkHcm612yI/AAAAAAAABbo/00aae3JXUkc/s548-Ic42/github%25252Blambda%25252Bslack%252520%2525281%252529.png"></p>

<p>あるGitHubリポジトリのissuesに特定のコメントが書き込まれると、そのユーザはプロジェクトのteamに自動で追加されて、Slackへ通知が流れるというモノです。</p>

<h2>SNS</h2>

<p>まずは媒介となるSNSの作成。
```
$ aws sns create-topic --name github --region ap-northeast-1
{</p>

<pre><code>"TopicArn": "arn:aws:sns:ap-northeast-1:123456789012:github"
</code></pre>

<p>}
```</p>

<p>次にSNSに対してpublishできるIAM userを作成</p>

<p>IAM Policy
```
{
  "Version": "2012-10-17",
  "Statement": [</p>

<pre><code>{
  "Action": [
    "sns:Publish"
  ],
  "Sid": "Stmt0000000000000",
  "Resource": [
    "arn:aws:sns:ap-northeast-1:123456789012:github"
  ],
  "Effect": "Allow"
}
</code></pre>

<p>  ]
}
```</p>

<h2>GitHub</h2>

<ul>
<li>organization: <code>my_org</code></li>
<li>repository: <code>test</code></li>
<li>team: <code>reader</code></li>
</ul>


<h3>SNS連携</h3>

<p><em>Webhooks &amp; Services</em> からAmazonSNSと連携</p>

<p><img src="https://lh3.googleusercontent.com/u4I9Z_Ing9YzhmVCQhMACwYDVIJxJM7C-aDmyMsNL3o=w328-h190-no"></p>

<p>AWS KEYには先ほど作成したIAMユーザのを利用。SNS topicのarnにはregionが書かれているにも関わらず、GitHubの方では明示的に指定が必要。</p>

<p><img src="https://lh3.googleusercontent.com/kppZQx_RdhyC11LB7a0cPtppDUiKgfZBm6laYvRG3zA=w382-h289-no"></p>

<h3>通知するeventの有効化</h3>

<p>さて、GitHubではSNSの場合、<a href="https://api.github.com/hooks">hooksのjson</a>にある通り、<code>push</code>時のeventにしか対応していないので、</p>

<p><code>json hooks https://api.github.com/hooks
"name": "amazonsns",
"events": [
  "push"
],
</code></p>

<p>GitHubの<a href="https://developer.github.com/v3/orgs/hooks/">Webhook API</a>に従って<code>issue_comment</code>を追加してやります。</p>

<p>先ほどのSNS連携のhook idを取得するには<code>GET /orgs/:org/hooks</code></p>

<p><code>bash
export HOOK_ID=$(curl -H 'Uer-Agent: ijin' -X GET -s -H "Authorization: token xxxxxxxxxx" \
https://api.github.com/repos/my_org/test/hooks | jq '.[].id')
</code></p>

<p>編集するには<code>PATCH /orgs/:org/hooks/:id</code></p>

<p><code>bash
curl -H 'Uer-Agent: ijin' -X PATCH -s -H "Authorization: token xxxxxxxxxx" \
https://api.github.com/repos/my_org/test/hooks/$HOOK_ID -d '{"add_events": ["issue_comment"]}' | jq .
</code></p>

<p>Web UIからは分からないので、ついでに<code>reader</code> teamのIDも取得しておく</p>

<p><code>bash
curl -H 'Uer-Agent: ijin' -X GET -s -H "Authorization: token xxxxxxxxxx" \
https://api.github.com/orgs/my_org/teams | jq '.[] | select(.name=="reader")'
</code></p>

<p>（※）User-Agentは<a href="https://developer.github.com/v3/#user-agent-required">必須</a></p>

<p>これで、誰かがコメントをした時にもSNSが飛びます。</p>

<h2>KMS</h2>

<p>lambdaでは以下の認証情報を使うので、予めKMSで暗号化しておく。</p>

<ul>
<li>GitHub token</li>
<li>Slack webhook</li>
</ul>


<p>rubyで暗号化する場合
<code>ruby
require 'aws-sdk'
require 'base64'
kms = Aws::KMS::Client.new(region: 'us-east-1')
Base64.encode64 kms.encrypt(key_id: "alias/ijin", plaintext: 'my plain text code').ciphertext_blob
</code></p>

<p>javascriptの場合
<code>javascript
var aws = require('aws-sdk');
var kms = new aws.KMS({ region: 'us-east-1' });
var text = 'my plain text code';
kms.encrypt({KeyId: 'alias/ijin', Plaintext: text}, function(err, data) {
  if (err) console.log(err, err.stack);
  else console.log(data.CiphertextBlob.toString('base64'));
});
</code></p>

<p>こうしておくと、SCMに入れても安心。</p>

<p>また、KMSキーの実行権限もlambdaのroleに紐づけておく。</p>

<p><img src="https://lh3.googleusercontent.com/oMHQ76XC7RQUCR_fEo9JyaMhPKSbnIdhCzjIWurEJ9c=w542-h358-no"></p>

<h2>Lambda</h2>

<p>Lambda function作成時にはSNSをevent sourceとして指定。</p>

<p><img src="https://lh3.googleusercontent.com/uDXkEVLrXT1BdUSbiMu3v5lnwTqCoXOkv_nu07XVxkk=w555-h235-no"></p>

<p>(※) KMSは現在us-eastにしかないので、そこ以外のregionでlambdaを実行する場合は、<code>timeout</code>は若干長めに指定して置くと良さげ</p>

<p>コードはこんな感じ。</p>

<ol>
<li>GitHubからSNS hookを受け取って</li>
<li>コメントした内容が<code>join</code>の場合</li>
<li>KMSによってGitHubのtokenを復号化し</li>
<li>そのユーザをteamへ追加する</li>
<li>その後、別lambda functionでslackへ通知する</li>
</ol>


<p><div><script src='https://gist.github.com/ef105e192a030571d83f.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p><div><script src='https://gist.github.com/f83e33a6ae0acd83902a.js?file='></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>nodeのlibraryを使うともっとスッキリ書けたけど、1 function 1 fileで纏めたかったのでやや冗長なコードになっちゃいました。。</p>

<h2>実行</h2>

<p>GitHubでコメント</p>

<p><img src="https://lh3.googleusercontent.com/KY7fwR-laXAJBQhJFv9VKzo_ydWFzeKep0G-3kgS0mM=w388-h128-no"></p>

<p>Lambda発動</p>

<p>```
2015-08-11T15:42:53.108Z    a09e3c80-403f-1e15-bbb5-55b693433c0e    user: ijin2
2015-08-11T15:42:53.108Z    a09e3c80-403f-1e15-bbb5-55b693433c0e    comment: join
2015-08-11T15:42:55.417Z    a09e3c80-403f-1e15-bbb5-55b693433c0e    status code: 200
2015-08-11T15:42:55.418Z    a09e3c80-403f-1e15-bbb5-55b693433c0e    response:
{</p>

<pre><code>"state": "pending",
"url": "https://api.github.com/teams/1234567/memberships/ijin2"
</code></pre>

<p>}
2015-08-11T15:42:55.418Z    a09e3c80-403f-1e15-bbb5-55b693433c0e    Added to the team
END RequestId: a09e3c80-403f-1e15-bbb5-55b693433c0e
REPORT RequestId: a09e3c80-403f-1e15-bbb5-55b693433c0e  Duration: 5211.48 ms    Billed Duration: 5300 ms Memory Size: 128 MB    Max Memory Used: 14 MB <br/>
```</p>

<p>```
2015-08-11T15:42:56.058Z    a25c66fc-403f-11e5-b291-25d4ee441689    Received event:
{</p>

<pre><code>"username": "ijin2",
"icon_url": "https://avatars.githubusercontent.com/u/12809425?v=3",
"text": "Added to the team"
</code></pre>

<p>}
2015-08-11T15:42:58.310Z    a25c66fc-403f-1e15-b291-25d4ee441689    200
2015-08-11T15:42:58.311Z    a25c66fc-403f-1e15-b291-25d4ee441689    ok
2015-08-11T15:42:58.311Z    a25c66fc-403f-1e15-b291-25d4ee441689    Successfully posted to Slack!
END RequestId: a25c66fc-403f-11e5-b291-25d4ee441689
REPORT RequestId: a25c66fc-403f-1e15-b291-25d4ee441689  Duration: 2268.06 ms    Billed Duration: 2300 ms Memory Size: 128 MB    Max Memory Used: 14 MB<br/>
```</p>

<p>teamへの追加（招待）</p>

<p><img src="https://lh3.googleusercontent.com/lzamiiNraeHYD7FI6rrb8-403hxjzVRrAqGG6k3sBcc=w474-h191-no"></p>

<p>Slackへ通知</p>

<p><img src="https://lh3.googleusercontent.com/EeEiHydBDc29YhVI6MBUcdj1WUzMXnf_Sis3U-URqhw=w388-h147-no"></p>

<h2>結論</h2>

<p>簡単にできますね。実はこんな風に作っちゃった2週間後ぐらいにAWSの人も似たような<a href="https://aws.amazon.com/blogs/compute/dynamic-github-actions-with-aws-lambda/">ブログ</a>を書いていた事を発見しましたが。まあ、こっちはKMSとSlack使ってるので。。</p>

<p>後、KMSのアイコンが欲しい！</p>
]]></content>
  </entry>
  
</feed>
